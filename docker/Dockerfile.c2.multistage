
## OLD FILE - I am leaving this in git so we can track how to perform builds 
## in docker. This is temporarily difficult as we can't easily build with 
## private repositories hosting go modules (because gitlab make things difficult). 

# This dockerfile uses multi-stage builds to both compile
# and build the c2 backend server.
# https://docs.docker.com/develop/develop-images/multistage-build/#use-multi-stage-builds
FROM golang:1.11 as buildenv

# workdir
ARG BUILDDIR=/build/teserakt/e4/c2backend

WORKDIR /go/src/
RUN mkdir -p /go/src/
RUN mkdir -p $BUILDDIR

COPY . $BUILDDIR/

RUN go get -d -v -u golang.org/x/tools/cmd/goimports && \
    go install golang.org/x/tools/cmd/goimports
RUN cd $BUILDDIR && ls && ./scripts/build.sh
RUN cd $BUILDDIR && ./scripts/unittests.sh

# This container is where we should make changes to the underlying 
# operating system, such as installing packages, configuring users etc
FROM centos:7 as runtime_base
RUN yum upgrade -y

# This is the resulting container.
# This container should be run like this:
# docker run -v $E4CONF:/opt/e4/configs -v $E4LOGFILE:/var/log/e4_c2backend.log \
# -p 5555:5555 -p 8888:8888
FROM runtime_base as c2
LABEL maintainer="antony@teserakt.io"
LABEL version="0.1"
LABEL vendor="Teserakt AG"

RUN mkdir -p /opt/e4/bin/ && \
    mkdir -p /opt/e4/configs/

COPY --from=buildenv $BUILDDIR/bin/c2backend /opt/e4/bin/c2backend
RUN chmod +x /opt/e4/bin/c2backend

CMD ["/opt/e4/bin/c2backend"]


