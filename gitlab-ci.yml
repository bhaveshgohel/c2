# E4 C2 Backend gitlab ci file

image: golang:1.12
stages:
  - build
  - test


before_script:
  # https://docs.gitlab.com/ee/ci/ssh_keys/
  - echo "Configuring git"
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - echo "$SSH_CI_KEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh && chmod 600 ~/.ssh
  - echo "gitlab.com,35.231.145.151 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=" >> ~/.ssh/known_hosts

  # Force use of ssh urls instead of https for gitlab.com. Has to be done before any go get...
  - git config --global url."git@gitlab.com:".insteadOf "https://gitlab.com/"
  - go get golang.org/x/tools/cmd/goimports
  - go install golang.org/x/tools/cmd/goimports

build:
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - export BUILDVERSION=${CI_COMMIT_REF_NAME}
    - echo "Building docker image with BUILDVERSION=${BUILDVERSION}"
    - ./scripts/docker-build.sh
    - docker push registry.gitlab.com/teserakt/c2:${BUILDVERSION}

unittest:
  stage: test
  script:
    - ./scripts/unittests.sh

functest:
  stage: test
  script:
    - ./scripts/test.sh
