// Code generated by MockGen. DO NOT EDIT.
// Source: gitlab.com/teserakt/c2/internal/events (interfaces: Factory)

// Package events is a generated GoMock package.
package events

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockFactory is a mock of Factory interface
type MockFactory struct {
	ctrl     *gomock.Controller
	recorder *MockFactoryMockRecorder
}

// MockFactoryMockRecorder is the mock recorder for MockFactory
type MockFactoryMockRecorder struct {
	mock *MockFactory
}

// NewMockFactory creates a new mock instance
func NewMockFactory(ctrl *gomock.Controller) *MockFactory {
	mock := &MockFactory{ctrl: ctrl}
	mock.recorder = &MockFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFactory) EXPECT() *MockFactoryMockRecorder {
	return m.recorder
}

// NewClientSubscribedEvent mocks base method
func (m *MockFactory) NewClientSubscribedEvent(arg0, arg1 string) Event {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewClientSubscribedEvent", arg0, arg1)
	ret0, _ := ret[0].(Event)
	return ret0
}

// NewClientSubscribedEvent indicates an expected call of NewClientSubscribedEvent
func (mr *MockFactoryMockRecorder) NewClientSubscribedEvent(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewClientSubscribedEvent", reflect.TypeOf((*MockFactory)(nil).NewClientSubscribedEvent), arg0, arg1)
}

// NewClientUnsubscribedEvent mocks base method
func (m *MockFactory) NewClientUnsubscribedEvent(arg0, arg1 string) Event {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewClientUnsubscribedEvent", arg0, arg1)
	ret0, _ := ret[0].(Event)
	return ret0
}

// NewClientUnsubscribedEvent indicates an expected call of NewClientUnsubscribedEvent
func (mr *MockFactoryMockRecorder) NewClientUnsubscribedEvent(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewClientUnsubscribedEvent", reflect.TypeOf((*MockFactory)(nil).NewClientUnsubscribedEvent), arg0, arg1)
}
