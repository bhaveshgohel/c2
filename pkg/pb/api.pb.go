// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EventType int32

const (
	EventType_UNDEFINED           EventType = 0
	EventType_CLIENT_SUBSCRIBED   EventType = 1
	EventType_CLIENT_UNSUBSCRIBED EventType = 2
)

var EventType_name = map[int32]string{
	0: "UNDEFINED",
	1: "CLIENT_SUBSCRIBED",
	2: "CLIENT_UNSUBSCRIBED",
}

var EventType_value = map[string]int32{
	"UNDEFINED":           0,
	"CLIENT_SUBSCRIBED":   1,
	"CLIENT_UNSUBSCRIBED": 2,
}

func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}

func (EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

type Client struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Client) Reset()         { *m = Client{} }
func (m *Client) String() string { return proto.CompactTextString(m) }
func (*Client) ProtoMessage()    {}
func (*Client) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *Client) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Client.Unmarshal(m, b)
}
func (m *Client) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Client.Marshal(b, m, deterministic)
}
func (m *Client) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Client.Merge(m, src)
}
func (m *Client) XXX_Size() int {
	return xxx_messageInfo_Client.Size(m)
}
func (m *Client) XXX_DiscardUnknown() {
	xxx_messageInfo_Client.DiscardUnknown(m)
}

var xxx_messageInfo_Client proto.InternalMessageInfo

func (m *Client) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type NewClientRequest struct {
	Client               *Client  `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewClientRequest) Reset()         { *m = NewClientRequest{} }
func (m *NewClientRequest) String() string { return proto.CompactTextString(m) }
func (*NewClientRequest) ProtoMessage()    {}
func (*NewClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *NewClientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewClientRequest.Unmarshal(m, b)
}
func (m *NewClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewClientRequest.Marshal(b, m, deterministic)
}
func (m *NewClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewClientRequest.Merge(m, src)
}
func (m *NewClientRequest) XXX_Size() int {
	return xxx_messageInfo_NewClientRequest.Size(m)
}
func (m *NewClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewClientRequest proto.InternalMessageInfo

func (m *NewClientRequest) GetClient() *Client {
	if m != nil {
		return m.Client
	}
	return nil
}

func (m *NewClientRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type NewClientResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewClientResponse) Reset()         { *m = NewClientResponse{} }
func (m *NewClientResponse) String() string { return proto.CompactTextString(m) }
func (*NewClientResponse) ProtoMessage()    {}
func (*NewClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *NewClientResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewClientResponse.Unmarshal(m, b)
}
func (m *NewClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewClientResponse.Marshal(b, m, deterministic)
}
func (m *NewClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewClientResponse.Merge(m, src)
}
func (m *NewClientResponse) XXX_Size() int {
	return xxx_messageInfo_NewClientResponse.Size(m)
}
func (m *NewClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewClientResponse proto.InternalMessageInfo

type RemoveClientRequest struct {
	Client               *Client  `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveClientRequest) Reset()         { *m = RemoveClientRequest{} }
func (m *RemoveClientRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveClientRequest) ProtoMessage()    {}
func (*RemoveClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *RemoveClientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveClientRequest.Unmarshal(m, b)
}
func (m *RemoveClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveClientRequest.Marshal(b, m, deterministic)
}
func (m *RemoveClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveClientRequest.Merge(m, src)
}
func (m *RemoveClientRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveClientRequest.Size(m)
}
func (m *RemoveClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveClientRequest proto.InternalMessageInfo

func (m *RemoveClientRequest) GetClient() *Client {
	if m != nil {
		return m.Client
	}
	return nil
}

type RemoveClientResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveClientResponse) Reset()         { *m = RemoveClientResponse{} }
func (m *RemoveClientResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveClientResponse) ProtoMessage()    {}
func (*RemoveClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *RemoveClientResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveClientResponse.Unmarshal(m, b)
}
func (m *RemoveClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveClientResponse.Marshal(b, m, deterministic)
}
func (m *RemoveClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveClientResponse.Merge(m, src)
}
func (m *RemoveClientResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveClientResponse.Size(m)
}
func (m *RemoveClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveClientResponse proto.InternalMessageInfo

type NewTopicClientRequest struct {
	Client               *Client  `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	Topic                string   `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewTopicClientRequest) Reset()         { *m = NewTopicClientRequest{} }
func (m *NewTopicClientRequest) String() string { return proto.CompactTextString(m) }
func (*NewTopicClientRequest) ProtoMessage()    {}
func (*NewTopicClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *NewTopicClientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewTopicClientRequest.Unmarshal(m, b)
}
func (m *NewTopicClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewTopicClientRequest.Marshal(b, m, deterministic)
}
func (m *NewTopicClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewTopicClientRequest.Merge(m, src)
}
func (m *NewTopicClientRequest) XXX_Size() int {
	return xxx_messageInfo_NewTopicClientRequest.Size(m)
}
func (m *NewTopicClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewTopicClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewTopicClientRequest proto.InternalMessageInfo

func (m *NewTopicClientRequest) GetClient() *Client {
	if m != nil {
		return m.Client
	}
	return nil
}

func (m *NewTopicClientRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

type NewTopicClientResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewTopicClientResponse) Reset()         { *m = NewTopicClientResponse{} }
func (m *NewTopicClientResponse) String() string { return proto.CompactTextString(m) }
func (*NewTopicClientResponse) ProtoMessage()    {}
func (*NewTopicClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *NewTopicClientResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewTopicClientResponse.Unmarshal(m, b)
}
func (m *NewTopicClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewTopicClientResponse.Marshal(b, m, deterministic)
}
func (m *NewTopicClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewTopicClientResponse.Merge(m, src)
}
func (m *NewTopicClientResponse) XXX_Size() int {
	return xxx_messageInfo_NewTopicClientResponse.Size(m)
}
func (m *NewTopicClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewTopicClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewTopicClientResponse proto.InternalMessageInfo

type RemoveTopicClientRequest struct {
	Client               *Client  `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	Topic                string   `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveTopicClientRequest) Reset()         { *m = RemoveTopicClientRequest{} }
func (m *RemoveTopicClientRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveTopicClientRequest) ProtoMessage()    {}
func (*RemoveTopicClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}

func (m *RemoveTopicClientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveTopicClientRequest.Unmarshal(m, b)
}
func (m *RemoveTopicClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveTopicClientRequest.Marshal(b, m, deterministic)
}
func (m *RemoveTopicClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveTopicClientRequest.Merge(m, src)
}
func (m *RemoveTopicClientRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveTopicClientRequest.Size(m)
}
func (m *RemoveTopicClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveTopicClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveTopicClientRequest proto.InternalMessageInfo

func (m *RemoveTopicClientRequest) GetClient() *Client {
	if m != nil {
		return m.Client
	}
	return nil
}

func (m *RemoveTopicClientRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

type RemoveTopicClientResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveTopicClientResponse) Reset()         { *m = RemoveTopicClientResponse{} }
func (m *RemoveTopicClientResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveTopicClientResponse) ProtoMessage()    {}
func (*RemoveTopicClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}

func (m *RemoveTopicClientResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveTopicClientResponse.Unmarshal(m, b)
}
func (m *RemoveTopicClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveTopicClientResponse.Marshal(b, m, deterministic)
}
func (m *RemoveTopicClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveTopicClientResponse.Merge(m, src)
}
func (m *RemoveTopicClientResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveTopicClientResponse.Size(m)
}
func (m *RemoveTopicClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveTopicClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveTopicClientResponse proto.InternalMessageInfo

type ResetClientRequest struct {
	Client               *Client  `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetClientRequest) Reset()         { *m = ResetClientRequest{} }
func (m *ResetClientRequest) String() string { return proto.CompactTextString(m) }
func (*ResetClientRequest) ProtoMessage()    {}
func (*ResetClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}

func (m *ResetClientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetClientRequest.Unmarshal(m, b)
}
func (m *ResetClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetClientRequest.Marshal(b, m, deterministic)
}
func (m *ResetClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetClientRequest.Merge(m, src)
}
func (m *ResetClientRequest) XXX_Size() int {
	return xxx_messageInfo_ResetClientRequest.Size(m)
}
func (m *ResetClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResetClientRequest proto.InternalMessageInfo

func (m *ResetClientRequest) GetClient() *Client {
	if m != nil {
		return m.Client
	}
	return nil
}

type ResetClientResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetClientResponse) Reset()         { *m = ResetClientResponse{} }
func (m *ResetClientResponse) String() string { return proto.CompactTextString(m) }
func (*ResetClientResponse) ProtoMessage()    {}
func (*ResetClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{10}
}

func (m *ResetClientResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetClientResponse.Unmarshal(m, b)
}
func (m *ResetClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetClientResponse.Marshal(b, m, deterministic)
}
func (m *ResetClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetClientResponse.Merge(m, src)
}
func (m *ResetClientResponse) XXX_Size() int {
	return xxx_messageInfo_ResetClientResponse.Size(m)
}
func (m *ResetClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResetClientResponse proto.InternalMessageInfo

type NewTopicRequest struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewTopicRequest) Reset()         { *m = NewTopicRequest{} }
func (m *NewTopicRequest) String() string { return proto.CompactTextString(m) }
func (*NewTopicRequest) ProtoMessage()    {}
func (*NewTopicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{11}
}

func (m *NewTopicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewTopicRequest.Unmarshal(m, b)
}
func (m *NewTopicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewTopicRequest.Marshal(b, m, deterministic)
}
func (m *NewTopicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewTopicRequest.Merge(m, src)
}
func (m *NewTopicRequest) XXX_Size() int {
	return xxx_messageInfo_NewTopicRequest.Size(m)
}
func (m *NewTopicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewTopicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewTopicRequest proto.InternalMessageInfo

func (m *NewTopicRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

type NewTopicResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewTopicResponse) Reset()         { *m = NewTopicResponse{} }
func (m *NewTopicResponse) String() string { return proto.CompactTextString(m) }
func (*NewTopicResponse) ProtoMessage()    {}
func (*NewTopicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12}
}

func (m *NewTopicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewTopicResponse.Unmarshal(m, b)
}
func (m *NewTopicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewTopicResponse.Marshal(b, m, deterministic)
}
func (m *NewTopicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewTopicResponse.Merge(m, src)
}
func (m *NewTopicResponse) XXX_Size() int {
	return xxx_messageInfo_NewTopicResponse.Size(m)
}
func (m *NewTopicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewTopicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewTopicResponse proto.InternalMessageInfo

type RemoveTopicRequest struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveTopicRequest) Reset()         { *m = RemoveTopicRequest{} }
func (m *RemoveTopicRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveTopicRequest) ProtoMessage()    {}
func (*RemoveTopicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{13}
}

func (m *RemoveTopicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveTopicRequest.Unmarshal(m, b)
}
func (m *RemoveTopicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveTopicRequest.Marshal(b, m, deterministic)
}
func (m *RemoveTopicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveTopicRequest.Merge(m, src)
}
func (m *RemoveTopicRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveTopicRequest.Size(m)
}
func (m *RemoveTopicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveTopicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveTopicRequest proto.InternalMessageInfo

func (m *RemoveTopicRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

type RemoveTopicResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveTopicResponse) Reset()         { *m = RemoveTopicResponse{} }
func (m *RemoveTopicResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveTopicResponse) ProtoMessage()    {}
func (*RemoveTopicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{14}
}

func (m *RemoveTopicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveTopicResponse.Unmarshal(m, b)
}
func (m *RemoveTopicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveTopicResponse.Marshal(b, m, deterministic)
}
func (m *RemoveTopicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveTopicResponse.Merge(m, src)
}
func (m *RemoveTopicResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveTopicResponse.Size(m)
}
func (m *RemoveTopicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveTopicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveTopicResponse proto.InternalMessageInfo

type NewClientKeyRequest struct {
	Client               *Client  `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewClientKeyRequest) Reset()         { *m = NewClientKeyRequest{} }
func (m *NewClientKeyRequest) String() string { return proto.CompactTextString(m) }
func (*NewClientKeyRequest) ProtoMessage()    {}
func (*NewClientKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{15}
}

func (m *NewClientKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewClientKeyRequest.Unmarshal(m, b)
}
func (m *NewClientKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewClientKeyRequest.Marshal(b, m, deterministic)
}
func (m *NewClientKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewClientKeyRequest.Merge(m, src)
}
func (m *NewClientKeyRequest) XXX_Size() int {
	return xxx_messageInfo_NewClientKeyRequest.Size(m)
}
func (m *NewClientKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewClientKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewClientKeyRequest proto.InternalMessageInfo

func (m *NewClientKeyRequest) GetClient() *Client {
	if m != nil {
		return m.Client
	}
	return nil
}

type NewClientKeyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewClientKeyResponse) Reset()         { *m = NewClientKeyResponse{} }
func (m *NewClientKeyResponse) String() string { return proto.CompactTextString(m) }
func (*NewClientKeyResponse) ProtoMessage()    {}
func (*NewClientKeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{16}
}

func (m *NewClientKeyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewClientKeyResponse.Unmarshal(m, b)
}
func (m *NewClientKeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewClientKeyResponse.Marshal(b, m, deterministic)
}
func (m *NewClientKeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewClientKeyResponse.Merge(m, src)
}
func (m *NewClientKeyResponse) XXX_Size() int {
	return xxx_messageInfo_NewClientKeyResponse.Size(m)
}
func (m *NewClientKeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewClientKeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewClientKeyResponse proto.InternalMessageInfo

type CountTopicsForClientRequest struct {
	Client               *Client  `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountTopicsForClientRequest) Reset()         { *m = CountTopicsForClientRequest{} }
func (m *CountTopicsForClientRequest) String() string { return proto.CompactTextString(m) }
func (*CountTopicsForClientRequest) ProtoMessage()    {}
func (*CountTopicsForClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{17}
}

func (m *CountTopicsForClientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountTopicsForClientRequest.Unmarshal(m, b)
}
func (m *CountTopicsForClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountTopicsForClientRequest.Marshal(b, m, deterministic)
}
func (m *CountTopicsForClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountTopicsForClientRequest.Merge(m, src)
}
func (m *CountTopicsForClientRequest) XXX_Size() int {
	return xxx_messageInfo_CountTopicsForClientRequest.Size(m)
}
func (m *CountTopicsForClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountTopicsForClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountTopicsForClientRequest proto.InternalMessageInfo

func (m *CountTopicsForClientRequest) GetClient() *Client {
	if m != nil {
		return m.Client
	}
	return nil
}

type CountTopicsForClientResponse struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountTopicsForClientResponse) Reset()         { *m = CountTopicsForClientResponse{} }
func (m *CountTopicsForClientResponse) String() string { return proto.CompactTextString(m) }
func (*CountTopicsForClientResponse) ProtoMessage()    {}
func (*CountTopicsForClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{18}
}

func (m *CountTopicsForClientResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountTopicsForClientResponse.Unmarshal(m, b)
}
func (m *CountTopicsForClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountTopicsForClientResponse.Marshal(b, m, deterministic)
}
func (m *CountTopicsForClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountTopicsForClientResponse.Merge(m, src)
}
func (m *CountTopicsForClientResponse) XXX_Size() int {
	return xxx_messageInfo_CountTopicsForClientResponse.Size(m)
}
func (m *CountTopicsForClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountTopicsForClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountTopicsForClientResponse proto.InternalMessageInfo

func (m *CountTopicsForClientResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetTopicsForClientRequest struct {
	Client               *Client  `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	Offset               int64    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Count                int64    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTopicsForClientRequest) Reset()         { *m = GetTopicsForClientRequest{} }
func (m *GetTopicsForClientRequest) String() string { return proto.CompactTextString(m) }
func (*GetTopicsForClientRequest) ProtoMessage()    {}
func (*GetTopicsForClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{19}
}

func (m *GetTopicsForClientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTopicsForClientRequest.Unmarshal(m, b)
}
func (m *GetTopicsForClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTopicsForClientRequest.Marshal(b, m, deterministic)
}
func (m *GetTopicsForClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTopicsForClientRequest.Merge(m, src)
}
func (m *GetTopicsForClientRequest) XXX_Size() int {
	return xxx_messageInfo_GetTopicsForClientRequest.Size(m)
}
func (m *GetTopicsForClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTopicsForClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTopicsForClientRequest proto.InternalMessageInfo

func (m *GetTopicsForClientRequest) GetClient() *Client {
	if m != nil {
		return m.Client
	}
	return nil
}

func (m *GetTopicsForClientRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetTopicsForClientRequest) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetTopicsForClientResponse struct {
	Topics               []string `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTopicsForClientResponse) Reset()         { *m = GetTopicsForClientResponse{} }
func (m *GetTopicsForClientResponse) String() string { return proto.CompactTextString(m) }
func (*GetTopicsForClientResponse) ProtoMessage()    {}
func (*GetTopicsForClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{20}
}

func (m *GetTopicsForClientResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTopicsForClientResponse.Unmarshal(m, b)
}
func (m *GetTopicsForClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTopicsForClientResponse.Marshal(b, m, deterministic)
}
func (m *GetTopicsForClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTopicsForClientResponse.Merge(m, src)
}
func (m *GetTopicsForClientResponse) XXX_Size() int {
	return xxx_messageInfo_GetTopicsForClientResponse.Size(m)
}
func (m *GetTopicsForClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTopicsForClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTopicsForClientResponse proto.InternalMessageInfo

func (m *GetTopicsForClientResponse) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

type CountClientsForTopicRequest struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountClientsForTopicRequest) Reset()         { *m = CountClientsForTopicRequest{} }
func (m *CountClientsForTopicRequest) String() string { return proto.CompactTextString(m) }
func (*CountClientsForTopicRequest) ProtoMessage()    {}
func (*CountClientsForTopicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{21}
}

func (m *CountClientsForTopicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountClientsForTopicRequest.Unmarshal(m, b)
}
func (m *CountClientsForTopicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountClientsForTopicRequest.Marshal(b, m, deterministic)
}
func (m *CountClientsForTopicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountClientsForTopicRequest.Merge(m, src)
}
func (m *CountClientsForTopicRequest) XXX_Size() int {
	return xxx_messageInfo_CountClientsForTopicRequest.Size(m)
}
func (m *CountClientsForTopicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountClientsForTopicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountClientsForTopicRequest proto.InternalMessageInfo

func (m *CountClientsForTopicRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

type CountClientsForTopicResponse struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountClientsForTopicResponse) Reset()         { *m = CountClientsForTopicResponse{} }
func (m *CountClientsForTopicResponse) String() string { return proto.CompactTextString(m) }
func (*CountClientsForTopicResponse) ProtoMessage()    {}
func (*CountClientsForTopicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{22}
}

func (m *CountClientsForTopicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountClientsForTopicResponse.Unmarshal(m, b)
}
func (m *CountClientsForTopicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountClientsForTopicResponse.Marshal(b, m, deterministic)
}
func (m *CountClientsForTopicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountClientsForTopicResponse.Merge(m, src)
}
func (m *CountClientsForTopicResponse) XXX_Size() int {
	return xxx_messageInfo_CountClientsForTopicResponse.Size(m)
}
func (m *CountClientsForTopicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountClientsForTopicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountClientsForTopicResponse proto.InternalMessageInfo

func (m *CountClientsForTopicResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetClientsForTopicRequest struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Offset               int64    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Count                int64    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClientsForTopicRequest) Reset()         { *m = GetClientsForTopicRequest{} }
func (m *GetClientsForTopicRequest) String() string { return proto.CompactTextString(m) }
func (*GetClientsForTopicRequest) ProtoMessage()    {}
func (*GetClientsForTopicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{23}
}

func (m *GetClientsForTopicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClientsForTopicRequest.Unmarshal(m, b)
}
func (m *GetClientsForTopicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClientsForTopicRequest.Marshal(b, m, deterministic)
}
func (m *GetClientsForTopicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClientsForTopicRequest.Merge(m, src)
}
func (m *GetClientsForTopicRequest) XXX_Size() int {
	return xxx_messageInfo_GetClientsForTopicRequest.Size(m)
}
func (m *GetClientsForTopicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClientsForTopicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetClientsForTopicRequest proto.InternalMessageInfo

func (m *GetClientsForTopicRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *GetClientsForTopicRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetClientsForTopicRequest) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetClientsForTopicResponse struct {
	Clients              []*Client `protobuf:"bytes,1,rep,name=clients,proto3" json:"clients,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetClientsForTopicResponse) Reset()         { *m = GetClientsForTopicResponse{} }
func (m *GetClientsForTopicResponse) String() string { return proto.CompactTextString(m) }
func (*GetClientsForTopicResponse) ProtoMessage()    {}
func (*GetClientsForTopicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{24}
}

func (m *GetClientsForTopicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClientsForTopicResponse.Unmarshal(m, b)
}
func (m *GetClientsForTopicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClientsForTopicResponse.Marshal(b, m, deterministic)
}
func (m *GetClientsForTopicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClientsForTopicResponse.Merge(m, src)
}
func (m *GetClientsForTopicResponse) XXX_Size() int {
	return xxx_messageInfo_GetClientsForTopicResponse.Size(m)
}
func (m *GetClientsForTopicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClientsForTopicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetClientsForTopicResponse proto.InternalMessageInfo

func (m *GetClientsForTopicResponse) GetClients() []*Client {
	if m != nil {
		return m.Clients
	}
	return nil
}

type CountClientsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountClientsRequest) Reset()         { *m = CountClientsRequest{} }
func (m *CountClientsRequest) String() string { return proto.CompactTextString(m) }
func (*CountClientsRequest) ProtoMessage()    {}
func (*CountClientsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{25}
}

func (m *CountClientsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountClientsRequest.Unmarshal(m, b)
}
func (m *CountClientsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountClientsRequest.Marshal(b, m, deterministic)
}
func (m *CountClientsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountClientsRequest.Merge(m, src)
}
func (m *CountClientsRequest) XXX_Size() int {
	return xxx_messageInfo_CountClientsRequest.Size(m)
}
func (m *CountClientsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountClientsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountClientsRequest proto.InternalMessageInfo

type CountClientsResponse struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountClientsResponse) Reset()         { *m = CountClientsResponse{} }
func (m *CountClientsResponse) String() string { return proto.CompactTextString(m) }
func (*CountClientsResponse) ProtoMessage()    {}
func (*CountClientsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{26}
}

func (m *CountClientsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountClientsResponse.Unmarshal(m, b)
}
func (m *CountClientsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountClientsResponse.Marshal(b, m, deterministic)
}
func (m *CountClientsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountClientsResponse.Merge(m, src)
}
func (m *CountClientsResponse) XXX_Size() int {
	return xxx_messageInfo_CountClientsResponse.Size(m)
}
func (m *CountClientsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountClientsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountClientsResponse proto.InternalMessageInfo

func (m *CountClientsResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetClientsRequest struct {
	Offset               int64    `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Count                int64    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClientsRequest) Reset()         { *m = GetClientsRequest{} }
func (m *GetClientsRequest) String() string { return proto.CompactTextString(m) }
func (*GetClientsRequest) ProtoMessage()    {}
func (*GetClientsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{27}
}

func (m *GetClientsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClientsRequest.Unmarshal(m, b)
}
func (m *GetClientsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClientsRequest.Marshal(b, m, deterministic)
}
func (m *GetClientsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClientsRequest.Merge(m, src)
}
func (m *GetClientsRequest) XXX_Size() int {
	return xxx_messageInfo_GetClientsRequest.Size(m)
}
func (m *GetClientsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClientsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetClientsRequest proto.InternalMessageInfo

func (m *GetClientsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetClientsRequest) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetClientsResponse struct {
	Clients              []*Client `protobuf:"bytes,1,rep,name=clients,proto3" json:"clients,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetClientsResponse) Reset()         { *m = GetClientsResponse{} }
func (m *GetClientsResponse) String() string { return proto.CompactTextString(m) }
func (*GetClientsResponse) ProtoMessage()    {}
func (*GetClientsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{28}
}

func (m *GetClientsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClientsResponse.Unmarshal(m, b)
}
func (m *GetClientsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClientsResponse.Marshal(b, m, deterministic)
}
func (m *GetClientsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClientsResponse.Merge(m, src)
}
func (m *GetClientsResponse) XXX_Size() int {
	return xxx_messageInfo_GetClientsResponse.Size(m)
}
func (m *GetClientsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClientsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetClientsResponse proto.InternalMessageInfo

func (m *GetClientsResponse) GetClients() []*Client {
	if m != nil {
		return m.Clients
	}
	return nil
}

type CountTopicsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountTopicsRequest) Reset()         { *m = CountTopicsRequest{} }
func (m *CountTopicsRequest) String() string { return proto.CompactTextString(m) }
func (*CountTopicsRequest) ProtoMessage()    {}
func (*CountTopicsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{29}
}

func (m *CountTopicsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountTopicsRequest.Unmarshal(m, b)
}
func (m *CountTopicsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountTopicsRequest.Marshal(b, m, deterministic)
}
func (m *CountTopicsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountTopicsRequest.Merge(m, src)
}
func (m *CountTopicsRequest) XXX_Size() int {
	return xxx_messageInfo_CountTopicsRequest.Size(m)
}
func (m *CountTopicsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountTopicsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountTopicsRequest proto.InternalMessageInfo

type CountTopicsResponse struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountTopicsResponse) Reset()         { *m = CountTopicsResponse{} }
func (m *CountTopicsResponse) String() string { return proto.CompactTextString(m) }
func (*CountTopicsResponse) ProtoMessage()    {}
func (*CountTopicsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{30}
}

func (m *CountTopicsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountTopicsResponse.Unmarshal(m, b)
}
func (m *CountTopicsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountTopicsResponse.Marshal(b, m, deterministic)
}
func (m *CountTopicsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountTopicsResponse.Merge(m, src)
}
func (m *CountTopicsResponse) XXX_Size() int {
	return xxx_messageInfo_CountTopicsResponse.Size(m)
}
func (m *CountTopicsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountTopicsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountTopicsResponse proto.InternalMessageInfo

func (m *CountTopicsResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetTopicsRequest struct {
	Offset               int64    `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Count                int64    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTopicsRequest) Reset()         { *m = GetTopicsRequest{} }
func (m *GetTopicsRequest) String() string { return proto.CompactTextString(m) }
func (*GetTopicsRequest) ProtoMessage()    {}
func (*GetTopicsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{31}
}

func (m *GetTopicsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTopicsRequest.Unmarshal(m, b)
}
func (m *GetTopicsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTopicsRequest.Marshal(b, m, deterministic)
}
func (m *GetTopicsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTopicsRequest.Merge(m, src)
}
func (m *GetTopicsRequest) XXX_Size() int {
	return xxx_messageInfo_GetTopicsRequest.Size(m)
}
func (m *GetTopicsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTopicsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTopicsRequest proto.InternalMessageInfo

func (m *GetTopicsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetTopicsRequest) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetTopicsResponse struct {
	Topics               []string `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTopicsResponse) Reset()         { *m = GetTopicsResponse{} }
func (m *GetTopicsResponse) String() string { return proto.CompactTextString(m) }
func (*GetTopicsResponse) ProtoMessage()    {}
func (*GetTopicsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{32}
}

func (m *GetTopicsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTopicsResponse.Unmarshal(m, b)
}
func (m *GetTopicsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTopicsResponse.Marshal(b, m, deterministic)
}
func (m *GetTopicsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTopicsResponse.Merge(m, src)
}
func (m *GetTopicsResponse) XXX_Size() int {
	return xxx_messageInfo_GetTopicsResponse.Size(m)
}
func (m *GetTopicsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTopicsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTopicsResponse proto.InternalMessageInfo

func (m *GetTopicsResponse) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

type LinkClientRequest struct {
	SourceClient         *Client  `protobuf:"bytes,1,opt,name=sourceClient,proto3" json:"sourceClient,omitempty"`
	TargetClient         *Client  `protobuf:"bytes,2,opt,name=targetClient,proto3" json:"targetClient,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinkClientRequest) Reset()         { *m = LinkClientRequest{} }
func (m *LinkClientRequest) String() string { return proto.CompactTextString(m) }
func (*LinkClientRequest) ProtoMessage()    {}
func (*LinkClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{33}
}

func (m *LinkClientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinkClientRequest.Unmarshal(m, b)
}
func (m *LinkClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinkClientRequest.Marshal(b, m, deterministic)
}
func (m *LinkClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkClientRequest.Merge(m, src)
}
func (m *LinkClientRequest) XXX_Size() int {
	return xxx_messageInfo_LinkClientRequest.Size(m)
}
func (m *LinkClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LinkClientRequest proto.InternalMessageInfo

func (m *LinkClientRequest) GetSourceClient() *Client {
	if m != nil {
		return m.SourceClient
	}
	return nil
}

func (m *LinkClientRequest) GetTargetClient() *Client {
	if m != nil {
		return m.TargetClient
	}
	return nil
}

type LinkClientResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinkClientResponse) Reset()         { *m = LinkClientResponse{} }
func (m *LinkClientResponse) String() string { return proto.CompactTextString(m) }
func (*LinkClientResponse) ProtoMessage()    {}
func (*LinkClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{34}
}

func (m *LinkClientResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinkClientResponse.Unmarshal(m, b)
}
func (m *LinkClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinkClientResponse.Marshal(b, m, deterministic)
}
func (m *LinkClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkClientResponse.Merge(m, src)
}
func (m *LinkClientResponse) XXX_Size() int {
	return xxx_messageInfo_LinkClientResponse.Size(m)
}
func (m *LinkClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LinkClientResponse proto.InternalMessageInfo

type UnlinkClientRequest struct {
	SourceClient         *Client  `protobuf:"bytes,1,opt,name=sourceClient,proto3" json:"sourceClient,omitempty"`
	TargetClient         *Client  `protobuf:"bytes,2,opt,name=targetClient,proto3" json:"targetClient,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnlinkClientRequest) Reset()         { *m = UnlinkClientRequest{} }
func (m *UnlinkClientRequest) String() string { return proto.CompactTextString(m) }
func (*UnlinkClientRequest) ProtoMessage()    {}
func (*UnlinkClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{35}
}

func (m *UnlinkClientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlinkClientRequest.Unmarshal(m, b)
}
func (m *UnlinkClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlinkClientRequest.Marshal(b, m, deterministic)
}
func (m *UnlinkClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlinkClientRequest.Merge(m, src)
}
func (m *UnlinkClientRequest) XXX_Size() int {
	return xxx_messageInfo_UnlinkClientRequest.Size(m)
}
func (m *UnlinkClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlinkClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnlinkClientRequest proto.InternalMessageInfo

func (m *UnlinkClientRequest) GetSourceClient() *Client {
	if m != nil {
		return m.SourceClient
	}
	return nil
}

func (m *UnlinkClientRequest) GetTargetClient() *Client {
	if m != nil {
		return m.TargetClient
	}
	return nil
}

type UnlinkClientResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnlinkClientResponse) Reset()         { *m = UnlinkClientResponse{} }
func (m *UnlinkClientResponse) String() string { return proto.CompactTextString(m) }
func (*UnlinkClientResponse) ProtoMessage()    {}
func (*UnlinkClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{36}
}

func (m *UnlinkClientResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlinkClientResponse.Unmarshal(m, b)
}
func (m *UnlinkClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlinkClientResponse.Marshal(b, m, deterministic)
}
func (m *UnlinkClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlinkClientResponse.Merge(m, src)
}
func (m *UnlinkClientResponse) XXX_Size() int {
	return xxx_messageInfo_UnlinkClientResponse.Size(m)
}
func (m *UnlinkClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlinkClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnlinkClientResponse proto.InternalMessageInfo

type CountLinkedClientsRequest struct {
	Client               *Client  `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountLinkedClientsRequest) Reset()         { *m = CountLinkedClientsRequest{} }
func (m *CountLinkedClientsRequest) String() string { return proto.CompactTextString(m) }
func (*CountLinkedClientsRequest) ProtoMessage()    {}
func (*CountLinkedClientsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{37}
}

func (m *CountLinkedClientsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountLinkedClientsRequest.Unmarshal(m, b)
}
func (m *CountLinkedClientsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountLinkedClientsRequest.Marshal(b, m, deterministic)
}
func (m *CountLinkedClientsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountLinkedClientsRequest.Merge(m, src)
}
func (m *CountLinkedClientsRequest) XXX_Size() int {
	return xxx_messageInfo_CountLinkedClientsRequest.Size(m)
}
func (m *CountLinkedClientsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountLinkedClientsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountLinkedClientsRequest proto.InternalMessageInfo

func (m *CountLinkedClientsRequest) GetClient() *Client {
	if m != nil {
		return m.Client
	}
	return nil
}

type CountLinkedClientsResponse struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountLinkedClientsResponse) Reset()         { *m = CountLinkedClientsResponse{} }
func (m *CountLinkedClientsResponse) String() string { return proto.CompactTextString(m) }
func (*CountLinkedClientsResponse) ProtoMessage()    {}
func (*CountLinkedClientsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{38}
}

func (m *CountLinkedClientsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountLinkedClientsResponse.Unmarshal(m, b)
}
func (m *CountLinkedClientsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountLinkedClientsResponse.Marshal(b, m, deterministic)
}
func (m *CountLinkedClientsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountLinkedClientsResponse.Merge(m, src)
}
func (m *CountLinkedClientsResponse) XXX_Size() int {
	return xxx_messageInfo_CountLinkedClientsResponse.Size(m)
}
func (m *CountLinkedClientsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountLinkedClientsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountLinkedClientsResponse proto.InternalMessageInfo

func (m *CountLinkedClientsResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetLinkedClientsRequest struct {
	Client               *Client  `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	Offset               int64    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Count                int64    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLinkedClientsRequest) Reset()         { *m = GetLinkedClientsRequest{} }
func (m *GetLinkedClientsRequest) String() string { return proto.CompactTextString(m) }
func (*GetLinkedClientsRequest) ProtoMessage()    {}
func (*GetLinkedClientsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{39}
}

func (m *GetLinkedClientsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLinkedClientsRequest.Unmarshal(m, b)
}
func (m *GetLinkedClientsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLinkedClientsRequest.Marshal(b, m, deterministic)
}
func (m *GetLinkedClientsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLinkedClientsRequest.Merge(m, src)
}
func (m *GetLinkedClientsRequest) XXX_Size() int {
	return xxx_messageInfo_GetLinkedClientsRequest.Size(m)
}
func (m *GetLinkedClientsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLinkedClientsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLinkedClientsRequest proto.InternalMessageInfo

func (m *GetLinkedClientsRequest) GetClient() *Client {
	if m != nil {
		return m.Client
	}
	return nil
}

func (m *GetLinkedClientsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetLinkedClientsRequest) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetLinkedClientsResponse struct {
	Clients              []*Client `protobuf:"bytes,1,rep,name=clients,proto3" json:"clients,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetLinkedClientsResponse) Reset()         { *m = GetLinkedClientsResponse{} }
func (m *GetLinkedClientsResponse) String() string { return proto.CompactTextString(m) }
func (*GetLinkedClientsResponse) ProtoMessage()    {}
func (*GetLinkedClientsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{40}
}

func (m *GetLinkedClientsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLinkedClientsResponse.Unmarshal(m, b)
}
func (m *GetLinkedClientsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLinkedClientsResponse.Marshal(b, m, deterministic)
}
func (m *GetLinkedClientsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLinkedClientsResponse.Merge(m, src)
}
func (m *GetLinkedClientsResponse) XXX_Size() int {
	return xxx_messageInfo_GetLinkedClientsResponse.Size(m)
}
func (m *GetLinkedClientsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLinkedClientsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLinkedClientsResponse proto.InternalMessageInfo

func (m *GetLinkedClientsResponse) GetClients() []*Client {
	if m != nil {
		return m.Clients
	}
	return nil
}

type SendClientPubKeyRequest struct {
	SourceClient         *Client  `protobuf:"bytes,1,opt,name=sourceClient,proto3" json:"sourceClient,omitempty"`
	TargetClient         *Client  `protobuf:"bytes,2,opt,name=targetClient,proto3" json:"targetClient,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendClientPubKeyRequest) Reset()         { *m = SendClientPubKeyRequest{} }
func (m *SendClientPubKeyRequest) String() string { return proto.CompactTextString(m) }
func (*SendClientPubKeyRequest) ProtoMessage()    {}
func (*SendClientPubKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{41}
}

func (m *SendClientPubKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendClientPubKeyRequest.Unmarshal(m, b)
}
func (m *SendClientPubKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendClientPubKeyRequest.Marshal(b, m, deterministic)
}
func (m *SendClientPubKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendClientPubKeyRequest.Merge(m, src)
}
func (m *SendClientPubKeyRequest) XXX_Size() int {
	return xxx_messageInfo_SendClientPubKeyRequest.Size(m)
}
func (m *SendClientPubKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendClientPubKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendClientPubKeyRequest proto.InternalMessageInfo

func (m *SendClientPubKeyRequest) GetSourceClient() *Client {
	if m != nil {
		return m.SourceClient
	}
	return nil
}

func (m *SendClientPubKeyRequest) GetTargetClient() *Client {
	if m != nil {
		return m.TargetClient
	}
	return nil
}

type SendClientPubKeyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendClientPubKeyResponse) Reset()         { *m = SendClientPubKeyResponse{} }
func (m *SendClientPubKeyResponse) String() string { return proto.CompactTextString(m) }
func (*SendClientPubKeyResponse) ProtoMessage()    {}
func (*SendClientPubKeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{42}
}

func (m *SendClientPubKeyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendClientPubKeyResponse.Unmarshal(m, b)
}
func (m *SendClientPubKeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendClientPubKeyResponse.Marshal(b, m, deterministic)
}
func (m *SendClientPubKeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendClientPubKeyResponse.Merge(m, src)
}
func (m *SendClientPubKeyResponse) XXX_Size() int {
	return xxx_messageInfo_SendClientPubKeyResponse.Size(m)
}
func (m *SendClientPubKeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendClientPubKeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendClientPubKeyResponse proto.InternalMessageInfo

type RemoveClientPubKeyRequest struct {
	SourceClient         *Client  `protobuf:"bytes,1,opt,name=sourceClient,proto3" json:"sourceClient,omitempty"`
	TargetClient         *Client  `protobuf:"bytes,2,opt,name=targetClient,proto3" json:"targetClient,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveClientPubKeyRequest) Reset()         { *m = RemoveClientPubKeyRequest{} }
func (m *RemoveClientPubKeyRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveClientPubKeyRequest) ProtoMessage()    {}
func (*RemoveClientPubKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{43}
}

func (m *RemoveClientPubKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveClientPubKeyRequest.Unmarshal(m, b)
}
func (m *RemoveClientPubKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveClientPubKeyRequest.Marshal(b, m, deterministic)
}
func (m *RemoveClientPubKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveClientPubKeyRequest.Merge(m, src)
}
func (m *RemoveClientPubKeyRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveClientPubKeyRequest.Size(m)
}
func (m *RemoveClientPubKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveClientPubKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveClientPubKeyRequest proto.InternalMessageInfo

func (m *RemoveClientPubKeyRequest) GetSourceClient() *Client {
	if m != nil {
		return m.SourceClient
	}
	return nil
}

func (m *RemoveClientPubKeyRequest) GetTargetClient() *Client {
	if m != nil {
		return m.TargetClient
	}
	return nil
}

type RemoveClientPubKeyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveClientPubKeyResponse) Reset()         { *m = RemoveClientPubKeyResponse{} }
func (m *RemoveClientPubKeyResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveClientPubKeyResponse) ProtoMessage()    {}
func (*RemoveClientPubKeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{44}
}

func (m *RemoveClientPubKeyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveClientPubKeyResponse.Unmarshal(m, b)
}
func (m *RemoveClientPubKeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveClientPubKeyResponse.Marshal(b, m, deterministic)
}
func (m *RemoveClientPubKeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveClientPubKeyResponse.Merge(m, src)
}
func (m *RemoveClientPubKeyResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveClientPubKeyResponse.Size(m)
}
func (m *RemoveClientPubKeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveClientPubKeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveClientPubKeyResponse proto.InternalMessageInfo

type ResetClientPubKeysRequest struct {
	TargetClient         *Client  `protobuf:"bytes,1,opt,name=targetClient,proto3" json:"targetClient,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetClientPubKeysRequest) Reset()         { *m = ResetClientPubKeysRequest{} }
func (m *ResetClientPubKeysRequest) String() string { return proto.CompactTextString(m) }
func (*ResetClientPubKeysRequest) ProtoMessage()    {}
func (*ResetClientPubKeysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{45}
}

func (m *ResetClientPubKeysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetClientPubKeysRequest.Unmarshal(m, b)
}
func (m *ResetClientPubKeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetClientPubKeysRequest.Marshal(b, m, deterministic)
}
func (m *ResetClientPubKeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetClientPubKeysRequest.Merge(m, src)
}
func (m *ResetClientPubKeysRequest) XXX_Size() int {
	return xxx_messageInfo_ResetClientPubKeysRequest.Size(m)
}
func (m *ResetClientPubKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetClientPubKeysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResetClientPubKeysRequest proto.InternalMessageInfo

func (m *ResetClientPubKeysRequest) GetTargetClient() *Client {
	if m != nil {
		return m.TargetClient
	}
	return nil
}

type ResetClientPubKeysResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetClientPubKeysResponse) Reset()         { *m = ResetClientPubKeysResponse{} }
func (m *ResetClientPubKeysResponse) String() string { return proto.CompactTextString(m) }
func (*ResetClientPubKeysResponse) ProtoMessage()    {}
func (*ResetClientPubKeysResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{46}
}

func (m *ResetClientPubKeysResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetClientPubKeysResponse.Unmarshal(m, b)
}
func (m *ResetClientPubKeysResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetClientPubKeysResponse.Marshal(b, m, deterministic)
}
func (m *ResetClientPubKeysResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetClientPubKeysResponse.Merge(m, src)
}
func (m *ResetClientPubKeysResponse) XXX_Size() int {
	return xxx_messageInfo_ResetClientPubKeysResponse.Size(m)
}
func (m *ResetClientPubKeysResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetClientPubKeysResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResetClientPubKeysResponse proto.InternalMessageInfo

type NewC2KeyRequest struct {
	Force                bool     `protobuf:"varint,1,opt,name=force,proto3" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewC2KeyRequest) Reset()         { *m = NewC2KeyRequest{} }
func (m *NewC2KeyRequest) String() string { return proto.CompactTextString(m) }
func (*NewC2KeyRequest) ProtoMessage()    {}
func (*NewC2KeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{47}
}

func (m *NewC2KeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewC2KeyRequest.Unmarshal(m, b)
}
func (m *NewC2KeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewC2KeyRequest.Marshal(b, m, deterministic)
}
func (m *NewC2KeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewC2KeyRequest.Merge(m, src)
}
func (m *NewC2KeyRequest) XXX_Size() int {
	return xxx_messageInfo_NewC2KeyRequest.Size(m)
}
func (m *NewC2KeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewC2KeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewC2KeyRequest proto.InternalMessageInfo

func (m *NewC2KeyRequest) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

type NewC2KeyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewC2KeyResponse) Reset()         { *m = NewC2KeyResponse{} }
func (m *NewC2KeyResponse) String() string { return proto.CompactTextString(m) }
func (*NewC2KeyResponse) ProtoMessage()    {}
func (*NewC2KeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{48}
}

func (m *NewC2KeyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewC2KeyResponse.Unmarshal(m, b)
}
func (m *NewC2KeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewC2KeyResponse.Marshal(b, m, deterministic)
}
func (m *NewC2KeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewC2KeyResponse.Merge(m, src)
}
func (m *NewC2KeyResponse) XXX_Size() int {
	return xxx_messageInfo_NewC2KeyResponse.Size(m)
}
func (m *NewC2KeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewC2KeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewC2KeyResponse proto.InternalMessageInfo

type ProtectMessageRequest struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	BinaryData           []byte   `protobuf:"bytes,2,opt,name=binaryData,proto3" json:"binaryData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProtectMessageRequest) Reset()         { *m = ProtectMessageRequest{} }
func (m *ProtectMessageRequest) String() string { return proto.CompactTextString(m) }
func (*ProtectMessageRequest) ProtoMessage()    {}
func (*ProtectMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{49}
}

func (m *ProtectMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtectMessageRequest.Unmarshal(m, b)
}
func (m *ProtectMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtectMessageRequest.Marshal(b, m, deterministic)
}
func (m *ProtectMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtectMessageRequest.Merge(m, src)
}
func (m *ProtectMessageRequest) XXX_Size() int {
	return xxx_messageInfo_ProtectMessageRequest.Size(m)
}
func (m *ProtectMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtectMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProtectMessageRequest proto.InternalMessageInfo

func (m *ProtectMessageRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *ProtectMessageRequest) GetBinaryData() []byte {
	if m != nil {
		return m.BinaryData
	}
	return nil
}

type ProtectMessageResponse struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	ProtectedBinaryData  []byte   `protobuf:"bytes,2,opt,name=protectedBinaryData,proto3" json:"protectedBinaryData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProtectMessageResponse) Reset()         { *m = ProtectMessageResponse{} }
func (m *ProtectMessageResponse) String() string { return proto.CompactTextString(m) }
func (*ProtectMessageResponse) ProtoMessage()    {}
func (*ProtectMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{50}
}

func (m *ProtectMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtectMessageResponse.Unmarshal(m, b)
}
func (m *ProtectMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtectMessageResponse.Marshal(b, m, deterministic)
}
func (m *ProtectMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtectMessageResponse.Merge(m, src)
}
func (m *ProtectMessageResponse) XXX_Size() int {
	return xxx_messageInfo_ProtectMessageResponse.Size(m)
}
func (m *ProtectMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtectMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProtectMessageResponse proto.InternalMessageInfo

func (m *ProtectMessageResponse) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *ProtectMessageResponse) GetProtectedBinaryData() []byte {
	if m != nil {
		return m.ProtectedBinaryData
	}
	return nil
}

type SubscribeToEventStreamRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeToEventStreamRequest) Reset()         { *m = SubscribeToEventStreamRequest{} }
func (m *SubscribeToEventStreamRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeToEventStreamRequest) ProtoMessage()    {}
func (*SubscribeToEventStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{51}
}

func (m *SubscribeToEventStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeToEventStreamRequest.Unmarshal(m, b)
}
func (m *SubscribeToEventStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeToEventStreamRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeToEventStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeToEventStreamRequest.Merge(m, src)
}
func (m *SubscribeToEventStreamRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeToEventStreamRequest.Size(m)
}
func (m *SubscribeToEventStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeToEventStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeToEventStreamRequest proto.InternalMessageInfo

type Event struct {
	Type   EventType `protobuf:"varint,1,opt,name=type,proto3,enum=pb.EventType" json:"type,omitempty"`
	Source string    `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Target string    `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	// Hold the time where event is sent
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{52}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetType() EventType {
	if m != nil {
		return m.Type
	}
	return EventType_UNDEFINED
}

func (m *Event) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Event) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Event) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func init() {
	proto.RegisterEnum("pb.EventType", EventType_name, EventType_value)
	proto.RegisterType((*Client)(nil), "pb.Client")
	proto.RegisterType((*NewClientRequest)(nil), "pb.NewClientRequest")
	proto.RegisterType((*NewClientResponse)(nil), "pb.NewClientResponse")
	proto.RegisterType((*RemoveClientRequest)(nil), "pb.RemoveClientRequest")
	proto.RegisterType((*RemoveClientResponse)(nil), "pb.RemoveClientResponse")
	proto.RegisterType((*NewTopicClientRequest)(nil), "pb.NewTopicClientRequest")
	proto.RegisterType((*NewTopicClientResponse)(nil), "pb.NewTopicClientResponse")
	proto.RegisterType((*RemoveTopicClientRequest)(nil), "pb.RemoveTopicClientRequest")
	proto.RegisterType((*RemoveTopicClientResponse)(nil), "pb.RemoveTopicClientResponse")
	proto.RegisterType((*ResetClientRequest)(nil), "pb.ResetClientRequest")
	proto.RegisterType((*ResetClientResponse)(nil), "pb.ResetClientResponse")
	proto.RegisterType((*NewTopicRequest)(nil), "pb.NewTopicRequest")
	proto.RegisterType((*NewTopicResponse)(nil), "pb.NewTopicResponse")
	proto.RegisterType((*RemoveTopicRequest)(nil), "pb.RemoveTopicRequest")
	proto.RegisterType((*RemoveTopicResponse)(nil), "pb.RemoveTopicResponse")
	proto.RegisterType((*NewClientKeyRequest)(nil), "pb.NewClientKeyRequest")
	proto.RegisterType((*NewClientKeyResponse)(nil), "pb.NewClientKeyResponse")
	proto.RegisterType((*CountTopicsForClientRequest)(nil), "pb.CountTopicsForClientRequest")
	proto.RegisterType((*CountTopicsForClientResponse)(nil), "pb.CountTopicsForClientResponse")
	proto.RegisterType((*GetTopicsForClientRequest)(nil), "pb.GetTopicsForClientRequest")
	proto.RegisterType((*GetTopicsForClientResponse)(nil), "pb.GetTopicsForClientResponse")
	proto.RegisterType((*CountClientsForTopicRequest)(nil), "pb.CountClientsForTopicRequest")
	proto.RegisterType((*CountClientsForTopicResponse)(nil), "pb.CountClientsForTopicResponse")
	proto.RegisterType((*GetClientsForTopicRequest)(nil), "pb.GetClientsForTopicRequest")
	proto.RegisterType((*GetClientsForTopicResponse)(nil), "pb.GetClientsForTopicResponse")
	proto.RegisterType((*CountClientsRequest)(nil), "pb.CountClientsRequest")
	proto.RegisterType((*CountClientsResponse)(nil), "pb.CountClientsResponse")
	proto.RegisterType((*GetClientsRequest)(nil), "pb.GetClientsRequest")
	proto.RegisterType((*GetClientsResponse)(nil), "pb.GetClientsResponse")
	proto.RegisterType((*CountTopicsRequest)(nil), "pb.CountTopicsRequest")
	proto.RegisterType((*CountTopicsResponse)(nil), "pb.CountTopicsResponse")
	proto.RegisterType((*GetTopicsRequest)(nil), "pb.GetTopicsRequest")
	proto.RegisterType((*GetTopicsResponse)(nil), "pb.GetTopicsResponse")
	proto.RegisterType((*LinkClientRequest)(nil), "pb.LinkClientRequest")
	proto.RegisterType((*LinkClientResponse)(nil), "pb.LinkClientResponse")
	proto.RegisterType((*UnlinkClientRequest)(nil), "pb.UnlinkClientRequest")
	proto.RegisterType((*UnlinkClientResponse)(nil), "pb.UnlinkClientResponse")
	proto.RegisterType((*CountLinkedClientsRequest)(nil), "pb.CountLinkedClientsRequest")
	proto.RegisterType((*CountLinkedClientsResponse)(nil), "pb.CountLinkedClientsResponse")
	proto.RegisterType((*GetLinkedClientsRequest)(nil), "pb.GetLinkedClientsRequest")
	proto.RegisterType((*GetLinkedClientsResponse)(nil), "pb.GetLinkedClientsResponse")
	proto.RegisterType((*SendClientPubKeyRequest)(nil), "pb.SendClientPubKeyRequest")
	proto.RegisterType((*SendClientPubKeyResponse)(nil), "pb.SendClientPubKeyResponse")
	proto.RegisterType((*RemoveClientPubKeyRequest)(nil), "pb.RemoveClientPubKeyRequest")
	proto.RegisterType((*RemoveClientPubKeyResponse)(nil), "pb.RemoveClientPubKeyResponse")
	proto.RegisterType((*ResetClientPubKeysRequest)(nil), "pb.ResetClientPubKeysRequest")
	proto.RegisterType((*ResetClientPubKeysResponse)(nil), "pb.ResetClientPubKeysResponse")
	proto.RegisterType((*NewC2KeyRequest)(nil), "pb.NewC2KeyRequest")
	proto.RegisterType((*NewC2KeyResponse)(nil), "pb.NewC2KeyResponse")
	proto.RegisterType((*ProtectMessageRequest)(nil), "pb.ProtectMessageRequest")
	proto.RegisterType((*ProtectMessageResponse)(nil), "pb.ProtectMessageResponse")
	proto.RegisterType((*SubscribeToEventStreamRequest)(nil), "pb.SubscribeToEventStreamRequest")
	proto.RegisterType((*Event)(nil), "pb.Event")
}

func init() {
	proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c)
}

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 1631 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0x69, 0x6f, 0xdb, 0xc6,
	0x16, 0x0d, 0xed, 0xc4, 0x2f, 0xba, 0x76, 0xfc, 0xe4, 0xd1, 0x6a, 0x5a, 0xde, 0x98, 0x04, 0xc9,
	0x93, 0x23, 0xc9, 0x51, 0x02, 0xc4, 0xf6, 0xc3, 0x43, 0xe2, 0x2d, 0x79, 0xd9, 0x0c, 0x57, 0xb6,
	0x81, 0x7e, 0x48, 0x91, 0x50, 0xca, 0x58, 0x50, 0x6d, 0x91, 0xac, 0x48, 0xc5, 0x55, 0x9d, 0x00,
	0x45, 0x17, 0xa0, 0x9f, 0xdb, 0xa2, 0x7f, 0xac, 0x7f, 0xa1, 0x3f, 0xa4, 0x98, 0x3b, 0x43, 0x6a,
	0x48, 0x0d, 0x95, 0x28, 0xdd, 0x3e, 0xc9, 0x9c, 0xe5, 0x9c, 0x73, 0xef, 0x5c, 0x0e, 0xcf, 0x35,
	0x24, 0x4c, 0xa7, 0x55, 0x76, 0x3a, 0xb6, 0x67, 0x93, 0x31, 0xa7, 0xae, 0x17, 0x9a, 0xb6, 0xdd,
	0x3c, 0xa5, 0x15, 0xd3, 0x69, 0x55, 0x4c, 0xcb, 0xb2, 0x3d, 0xd3, 0x6b, 0xd9, 0x96, 0xcb, 0x57,
	0xe8, 0xb7, 0xf0, 0xa7, 0x51, 0x6a, 0x52, 0xab, 0xe4, 0x9e, 0x99, 0xcd, 0x26, 0xed, 0x54, 0x6c,
	0x07, 0x57, 0x28, 0x56, 0x2f, 0x0a, 0x2c, 0x7c, 0xaa, 0x77, 0x8f, 0x2b, 0x5e, 0xab, 0x4d, 0x5d,
	0xcf, 0x6c, 0x3b, 0x7c, 0x81, 0x51, 0x80, 0x89, 0xed, 0xd3, 0x16, 0xb5, 0x3c, 0x42, 0xe0, 0xa2,
	0x65, 0xb6, 0x69, 0x5e, 0x5b, 0xd2, 0x6e, 0x26, 0x6a, 0xf8, 0xb7, 0xf1, 0x7f, 0x48, 0xee, 0xd1,
	0x33, 0xbe, 0xa0, 0x46, 0xbf, 0xe8, 0x52, 0xd7, 0x23, 0x06, 0x4c, 0x34, 0x70, 0x00, 0x57, 0x4e,
	0x56, 0xa1, 0xec, 0xd4, 0xcb, 0x62, 0x89, 0x98, 0x21, 0x49, 0x18, 0x3f, 0xa1, 0xbd, 0xfc, 0xd8,
	0x92, 0x76, 0x73, 0xaa, 0xc6, 0xfe, 0x34, 0x52, 0x30, 0x23, 0x21, 0xb9, 0x8e, 0x6d, 0xb9, 0xd4,
	0x58, 0x87, 0x54, 0x8d, 0xb6, 0xed, 0x37, 0x74, 0x64, 0x06, 0x23, 0x0b, 0xe9, 0xf0, 0x56, 0x01,
	0xf9, 0x09, 0x64, 0xf6, 0xe8, 0xd9, 0xa1, 0xed, 0xb4, 0x1a, 0xa3, 0xcb, 0x4e, 0xc3, 0x25, 0x8f,
	0xed, 0x44, 0xe1, 0x89, 0x1a, 0x7f, 0x30, 0xf2, 0x90, 0x8d, 0x42, 0x0a, 0xb2, 0x43, 0xc8, 0x73,
	0x11, 0x7f, 0x2a, 0xdf, 0x1c, 0xcc, 0x2a, 0x50, 0x05, 0xe5, 0x1a, 0x90, 0x1a, 0x75, 0xa9, 0x37,
	0x7a, 0xc6, 0x32, 0x2c, 0xd9, 0xd2, 0x4e, 0x01, 0x78, 0x03, 0xfe, 0xed, 0x47, 0xe7, 0xa3, 0x05,
	0xb2, 0x34, 0x59, 0x16, 0xc1, 0x5a, 0x10, 0x0b, 0xc5, 0xe6, 0x22, 0x53, 0x13, 0x48, 0x1d, 0xbe,
	0x3f, 0xe3, 0x1f, 0x76, 0x18, 0x62, 0x1d, 0x52, 0x41, 0x61, 0x3c, 0xa5, 0xbd, 0x11, 0x6b, 0x20,
	0xbc, 0x55, 0x40, 0x6e, 0xc2, 0xdc, 0xb6, 0xdd, 0xb5, 0x3c, 0x24, 0x72, 0x1f, 0xda, 0x9d, 0xd1,
	0x93, 0x75, 0x17, 0x0a, 0x6a, 0x08, 0x4e, 0xc1, 0x42, 0x6c, 0xb0, 0x79, 0x84, 0x18, 0xaf, 0xf1,
	0x07, 0xa3, 0x0d, 0xb3, 0x8f, 0xe8, 0x1f, 0xa0, 0x25, 0x59, 0x98, 0xb0, 0x8f, 0x8f, 0x5d, 0xea,
	0x61, 0x45, 0x8c, 0xd7, 0xc4, 0x53, 0x9f, 0x6e, 0x5c, 0xa6, 0xbb, 0x0b, 0xba, 0x8a, 0x4e, 0x48,
	0xcc, 0xc2, 0x04, 0x26, 0xde, 0xcd, 0x6b, 0x4b, 0xe3, 0x37, 0x13, 0x35, 0xf1, 0x64, 0xdc, 0x11,
	0xd9, 0xe1, 0xcb, 0xd9, 0xc6, 0x0f, 0x38, 0x3c, 0x3f, 0x1f, 0x03, 0x9b, 0x86, 0xe6, 0xe3, 0x25,
	0xe6, 0x63, 0x14, 0xa2, 0x11, 0x33, 0xb0, 0x85, 0x19, 0x88, 0x13, 0x75, 0x0d, 0xfe, 0xc5, 0xf3,
	0xca, 0x53, 0x10, 0x4e, 0xb9, 0x3f, 0xc5, 0xea, 0x52, 0x0e, 0x4d, 0xc8, 0x33, 0x6e, 0x41, 0x3a,
	0x3c, 0x3c, 0x34, 0xd2, 0x4d, 0x98, 0xe9, 0x0b, 0xf1, 0x23, 0xec, 0xc7, 0xa2, 0xa9, 0x63, 0x19,
	0x93, 0x21, 0x36, 0x80, 0xc8, 0x10, 0x23, 0xc5, 0x90, 0x06, 0x22, 0x95, 0xab, 0x1f, 0xc2, 0x8a,
	0x88, 0xcc, 0x1f, 0x1d, 0x1a, 0xc1, 0x03, 0x48, 0x06, 0xc5, 0xf4, 0x71, 0x01, 0xac, 0x60, 0x0e,
	0x22, 0x64, 0x71, 0x55, 0xe8, 0xc2, 0xcc, 0xb3, 0x96, 0x75, 0x12, 0x7e, 0x45, 0xca, 0x30, 0xe5,
	0xda, 0xdd, 0x4e, 0x43, 0x5c, 0xea, 0x8a, 0x17, 0x25, 0x34, 0xcf, 0xd6, 0x7b, 0x66, 0xa7, 0xe9,
	0x67, 0x0d, 0xe5, 0x44, 0xd6, 0xcb, 0xf3, 0x2c, 0x4d, 0x32, 0xa9, 0xb8, 0x2e, 0xba, 0x90, 0x3a,
	0xb2, 0x4e, 0xff, 0x76, 0x31, 0x59, 0x48, 0x87, 0x69, 0x85, 0x9c, 0xfb, 0x30, 0x8b, 0xa7, 0xc6,
	0x94, 0xd2, 0xd7, 0x91, 0x92, 0xfa, 0x90, 0xbb, 0xab, 0x0a, 0xba, 0x0a, 0x60, 0xe8, 0xe9, 0x9f,
	0x40, 0xee, 0x11, 0xfd, 0x68, 0xca, 0x11, 0xdf, 0xda, 0x07, 0x90, 0x1f, 0x24, 0x1b, 0xa9, 0xde,
	0x7b, 0x90, 0x3b, 0xa0, 0x96, 0xd8, 0xbc, 0xdf, 0xad, 0x4b, 0x1f, 0x8e, 0xbf, 0xfa, 0xd8, 0x74,
	0xc8, 0x0f, 0x52, 0x8b, 0xa3, 0x3b, 0xf7, 0xbf, 0xdc, 0xff, 0x84, 0xb0, 0x02, 0xe8, 0x2a, 0x72,
	0x21, 0xed, 0x29, 0x93, 0x16, 0x7c, 0xfd, 0xf9, 0xa4, 0x2b, 0x49, 0x0b, 0x51, 0x69, 0x1f, 0x42,
	0x35, 0x08, 0x16, 0x72, 0x14, 0xdb, 0x55, 0x29, 0xf6, 0x34, 0x5c, 0x3a, 0xb6, 0x3b, 0x0d, 0x6e,
	0x2e, 0x2f, 0xd7, 0xf8, 0x83, 0x70, 0x14, 0x62, 0xa1, 0xd8, 0xfc, 0x1c, 0x32, 0xfb, 0x1d, 0xdb,
	0xa3, 0x0d, 0xef, 0x39, 0x75, 0x5d, 0xb3, 0x49, 0x87, 0x7f, 0x2e, 0x16, 0x00, 0xea, 0x2d, 0xcb,
	0xec, 0xf4, 0x76, 0x4c, 0xcf, 0x14, 0x7e, 0x53, 0x1a, 0x31, 0x5e, 0x41, 0x36, 0x0a, 0xd7, 0x7f,
	0x0f, 0x14, 0x78, 0xab, 0x90, 0x72, 0xf8, 0x7a, 0xfa, 0x7a, 0x2b, 0x0a, 0xac, 0x9a, 0x32, 0x16,
	0x61, 0xfe, 0xa0, 0x5b, 0x77, 0x1b, 0x9d, 0x56, 0x9d, 0x1e, 0xda, 0xbb, 0x6f, 0xa8, 0xe5, 0x1d,
	0x78, 0x1d, 0x6a, 0xb6, 0xfd, 0x5b, 0xf8, 0x67, 0x0d, 0x2e, 0xe1, 0x30, 0x59, 0x86, 0x8b, 0x5e,
	0xcf, 0xe1, 0x49, 0x98, 0xae, 0x5e, 0x61, 0xe9, 0xc5, 0x89, 0xc3, 0x9e, 0x43, 0x6b, 0x38, 0xc5,
	0x5e, 0x24, 0x5e, 0x04, 0xc2, 0x12, 0x8a, 0x27, 0xbc, 0x46, 0xf1, 0x04, 0xf0, 0x4d, 0x62, 0xd7,
	0x28, 0x3e, 0x91, 0x35, 0x48, 0x04, 0x8e, 0x3e, 0x7f, 0x11, 0x8f, 0x4d, 0x2f, 0x73, 0xcf, 0x5f,
	0xf6, 0x3d, 0x7f, 0xf9, 0xd0, 0x5f, 0x51, 0xeb, 0x2f, 0x2e, 0x3e, 0x81, 0x44, 0x40, 0x4e, 0xae,
	0x40, 0xe2, 0x68, 0x6f, 0x67, 0xf7, 0xe1, 0xe3, 0xbd, 0xdd, 0x9d, 0xe4, 0x05, 0x92, 0x81, 0x99,
	0xed, 0x67, 0x8f, 0x77, 0xf7, 0x0e, 0x5f, 0x1e, 0x1c, 0x6d, 0x1d, 0x6c, 0xd7, 0x1e, 0x6f, 0xed,
	0xee, 0x24, 0x35, 0x92, 0x83, 0x94, 0x18, 0x3e, 0xda, 0x93, 0x26, 0xc6, 0xaa, 0xbf, 0x64, 0x61,
	0x6c, 0xbb, 0x4a, 0x3e, 0x83, 0x44, 0xe0, 0xc7, 0x48, 0x9a, 0x85, 0x17, 0x6d, 0x1e, 0xf4, 0x4c,
	0x64, 0x54, 0x9c, 0xfa, 0xd5, 0x6f, 0x7e, 0xfd, 0xed, 0xa7, 0xb1, 0x79, 0x23, 0x5f, 0xa1, 0x77,
	0x2b, 0xfc, 0x25, 0xaf, 0x9c, 0xf3, 0xdf, 0x32, 0x6b, 0x44, 0xde, 0x6d, 0x68, 0x45, 0xd2, 0x80,
	0x29, 0xb9, 0xc0, 0x49, 0x8e, 0x61, 0x29, 0xfa, 0x07, 0x3d, 0x3f, 0x38, 0x21, 0x78, 0x96, 0x90,
	0x47, 0x2f, 0xc6, 0xf2, 0x90, 0x57, 0x30, 0x29, 0x95, 0x36, 0xc9, 0x72, 0xa8, 0xa8, 0xe1, 0xd6,
	0x73, 0x03, 0xe3, 0x61, 0x06, 0x3d, 0x9e, 0xe1, 0x18, 0xa6, 0x64, 0xd7, 0xca, 0xc3, 0x50, 0x58,
	0x60, 0x1e, 0x86, 0xd2, 0xe0, 0x8a, 0x74, 0x55, 0x87, 0xa6, 0xeb, 0x00, 0x2e, 0xfb, 0x7e, 0x9d,
	0xa4, 0x04, 0x94, 0x6c, 0xc0, 0xf4, 0x74, 0x78, 0x50, 0x60, 0x17, 0x10, 0x3b, 0x6b, 0xa4, 0x19,
	0x36, 0xbe, 0x14, 0x95, 0x73, 0xfc, 0xf9, 0x5f, 0xb1, 0xf8, 0x8e, 0xbc, 0x60, 0xe9, 0x09, 0x4c,
	0xbc, 0x9f, 0x9e, 0x68, 0x07, 0xa0, 0xe7, 0x06, 0xc6, 0xc3, 0xe8, 0x45, 0x35, 0xfa, 0x57, 0x30,
	0x1d, 0xee, 0xb4, 0xc8, 0xac, 0xac, 0x31, 0x7c, 0x04, 0xba, 0x6a, 0x4a, 0xd0, 0xdc, 0x46, 0x9a,
	0x15, 0xfd, 0x3f, 0x71, 0x09, 0x1a, 0xe4, 0xfe, 0x56, 0x83, 0x99, 0x81, 0xb6, 0x8b, 0x14, 0x22,
	0x81, 0x84, 0x25, 0xcc, 0xc7, 0xcc, 0x86, 0x55, 0x14, 0x47, 0x50, 0xf1, 0x83, 0x26, 0x6c, 0x67,
	0xc4, 0xd5, 0x93, 0x45, 0xbc, 0x8c, 0xe3, 0xbb, 0x1a, 0x7d, 0x29, 0x7e, 0x81, 0x90, 0x53, 0x42,
	0x39, 0x37, 0xc8, 0xf5, 0xe1, 0x72, 0xdc, 0x0a, 0x7e, 0xa5, 0xc9, 0x5b, 0xf4, 0xa3, 0x51, 0x1d,
	0x18, 0x72, 0x6c, 0x93, 0xa3, 0x2f, 0xc4, 0x4d, 0xfb, 0xdf, 0x06, 0xd4, 0xb0, 0x4c, 0x16, 0xdf,
	0xa3, 0x81, 0x7c, 0xaf, 0x85, 0xfd, 0xb7, 0x6f, 0xee, 0xa5, 0x44, 0xa8, 0xfb, 0x0a, 0x29, 0x11,
	0x31, 0x7d, 0x81, 0x51, 0x44, 0x11, 0xd7, 0x88, 0xa1, 0x2a, 0x42, 0xa1, 0xca, 0xcf, 0x42, 0x4f,
	0x76, 0xe5, 0x81, 0x08, 0x3f, 0x0b, 0x31, 0x12, 0x16, 0xe2, 0xa6, 0x85, 0x80, 0x6b, 0x28, 0x60,
	0x81, 0x14, 0x86, 0x09, 0x20, 0x2f, 0x60, 0x4a, 0x0e, 0x83, 0x5f, 0x14, 0x8a, 0x56, 0x85, 0x5f,
	0x14, 0xaa, 0x66, 0xc5, 0x98, 0x45, 0xa2, 0x14, 0x99, 0xe9, 0xa7, 0xdb, 0x0f, 0x6c, 0x1f, 0xa0,
	0xaf, 0x90, 0x64, 0xc2, 0x8a, 0x7d, 0xe4, 0x6c, 0x74, 0x58, 0xe0, 0xa6, 0x10, 0xf7, 0x0a, 0x99,
	0x94, 0x70, 0xc9, 0xa7, 0x30, 0x29, 0xd5, 0x1f, 0xbf, 0x1b, 0x06, 0xbb, 0x12, 0x3d, 0x37, 0x30,
	0x2e, 0x40, 0xf3, 0x08, 0x4a, 0x48, 0x32, 0xc8, 0x8a, 0xaf, 0xf5, 0x19, 0x24, 0x82, 0x9a, 0xe2,
	0x1f, 0x96, 0x68, 0xab, 0xa2, 0x67, 0x22, 0xa3, 0x02, 0x93, 0x20, 0xe6, 0x14, 0x81, 0x3e, 0x26,
	0x79, 0x0b, 0xd0, 0xef, 0x02, 0x78, 0xe4, 0x03, 0xad, 0x08, 0x8f, 0x5c, 0xd1, 0x2c, 0xdc, 0x47,
	0xc0, 0x75, 0xe3, 0x9e, 0x5c, 0xc0, 0xb2, 0x39, 0x12, 0x65, 0xcc, 0x8c, 0x7d, 0xe5, 0x5c, 0x36,
	0x74, 0xe2, 0xfa, 0xff, 0x4e, 0x83, 0x29, 0xd9, 0xf7, 0xf3, 0x63, 0x55, 0x34, 0x20, 0xfc, 0x58,
	0x95, 0x2d, 0xc2, 0x26, 0x8a, 0xf8, 0x6f, 0x71, 0xfd, 0x3d, 0x22, 0xba, 0x56, 0xac, 0x8c, 0xaf,
	0x35, 0xd1, 0x32, 0x86, 0x6c, 0x38, 0x2f, 0xec, 0xd8, 0xf6, 0x83, 0x17, 0x76, 0x7c, 0x73, 0x61,
	0xac, 0xa0, 0xb0, 0xeb, 0xe4, 0x6a, 0xec, 0xeb, 0x8d, 0x82, 0xf8, 0xa9, 0x7a, 0xd8, 0x71, 0x86,
	0xf9, 0xe7, 0xc4, 0x31, 0x2a, 0xd9, 0x0b, 0xea, 0x49, 0xc1, 0x7d, 0x1d, 0xb9, 0x17, 0xc9, 0xfc,
	0x50, 0x6e, 0xe2, 0x40, 0x32, 0xea, 0xdf, 0x39, 0x6b, 0x4c, 0x43, 0xc1, 0x59, 0x63, 0x2d, 0xff,
	0x32, 0xb2, 0xce, 0x19, 0x59, 0xc6, 0xea, 0x52, 0xeb, 0x75, 0x89, 0x53, 0x96, 0x9c, 0x6e, 0xfd,
	0x84, 0xf6, 0xd8, 0x87, 0xf8, 0x4b, 0xff, 0x9f, 0x64, 0x21, 0xce, 0xf9, 0xa8, 0x49, 0x09, 0xb3,
	0x2e, 0xc4, 0x4d, 0xab, 0x1c, 0x53, 0x07, 0xd7, 0xc5, 0x30, 0x47, 0x7d, 0xba, 0xcf, 0x1c, 0xd3,
	0x0c, 0xf8, 0xcc, 0xb1, 0xf6, 0x3e, 0xc2, 0xec, 0x52, 0x2f, 0x4c, 0xec, 0x32, 0xe6, 0x7d, 0x34,
	0x1f, 0x68, 0xed, 0x03, 0xf3, 0x21, 0x77, 0x04, 0x81, 0xf9, 0x08, 0xbb, 0x7f, 0x71, 0x5f, 0x19,
	0xd3, 0x0c, 0xdb, 0xa2, 0x67, 0xa5, 0x46, 0xb5, 0x24, 0x62, 0x69, 0xc2, 0x74, 0xd8, 0xc9, 0x73,
	0x6f, 0xa0, 0x6c, 0x16, 0xb8, 0x37, 0x50, 0x1b, 0x7f, 0x63, 0x01, 0x39, 0xf2, 0x46, 0x8a, 0x71,
	0x08, 0x47, 0x5f, 0x6a, 0xf3, 0x45, 0x8c, 0xe8, 0x09, 0x64, 0xd5, 0x86, 0x9e, 0x2c, 0x63, 0x25,
	0x0c, 0x33, 0xfb, 0x7a, 0x22, 0x30, 0xf5, 0xc6, 0x85, 0x55, 0x6d, 0x6b, 0xe7, 0xc7, 0xcd, 0x4d,
	0x72, 0x19, 0x26, 0x1a, 0xd5, 0x92, 0xe9, 0xb4, 0xf4, 0xe9, 0xdb, 0xd5, 0x7b, 0xe5, 0xd5, 0xf2,
	0x6a, 0xf9, 0xf6, 0xc6, 0xda, 0xda, 0xda, 0x5a, 0x51, 0x1b, 0xab, 0x26, 0x4d, 0xc7, 0x39, 0x6d,
	0x35, 0xf0, 0x9f, 0xf6, 0x95, 0xcf, 0x5d, 0xdb, 0xda, 0x18, 0x18, 0xa9, 0x4f, 0xa0, 0x93, 0xbf,
	0xf3, 0x7b, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6a, 0x65, 0xb2, 0x25, 0x28, 0x18, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// C2Client is the client API for C2 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type C2Client interface {
	// Create a new client
	NewClient(ctx context.Context, in *NewClientRequest, opts ...grpc.CallOption) (*NewClientResponse, error)
	// Remove a client
	RemoveClient(ctx context.Context, in *RemoveClientRequest, opts ...grpc.CallOption) (*RemoveClientResponse, error)
	// Instruct the C2 server to send a reset command to the client
	ResetClient(ctx context.Context, in *ResetClientRequest, opts ...grpc.CallOption) (*ResetClientResponse, error)
	// Generate a new key for the client
	NewClientKey(ctx context.Context, in *NewClientKeyRequest, opts ...grpc.CallOption) (*NewClientKeyResponse, error)
	// Create a new topic
	NewTopic(ctx context.Context, in *NewTopicRequest, opts ...grpc.CallOption) (*NewTopicResponse, error)
	// Remove a topic
	RemoveTopic(ctx context.Context, in *RemoveTopicRequest, opts ...grpc.CallOption) (*RemoveTopicResponse, error)
	// Associate a topic with a client
	NewTopicClient(ctx context.Context, in *NewTopicClientRequest, opts ...grpc.CallOption) (*NewTopicClientResponse, error)
	// Remove a topic / client association
	RemoveTopicClient(ctx context.Context, in *RemoveTopicClientRequest, opts ...grpc.CallOption) (*RemoveTopicClientResponse, error)
	// Count the number of topics for a client
	CountTopicsForClient(ctx context.Context, in *CountTopicsForClientRequest, opts ...grpc.CallOption) (*CountTopicsForClientResponse, error)
	// Retrieve paginated topics for a client
	GetTopicsForClient(ctx context.Context, in *GetTopicsForClientRequest, opts ...grpc.CallOption) (*GetTopicsForClientResponse, error)
	// Count the number of clients for a topic
	CountClientsForTopic(ctx context.Context, in *CountClientsForTopicRequest, opts ...grpc.CallOption) (*CountClientsForTopicResponse, error)
	// Retrieve paginated clients for a topic
	GetClientsForTopic(ctx context.Context, in *GetClientsForTopicRequest, opts ...grpc.CallOption) (*GetClientsForTopicResponse, error)
	// Count the number of clients
	CountClients(ctx context.Context, in *CountClientsRequest, opts ...grpc.CallOption) (*CountClientsResponse, error)
	// Retrieve paginated clients
	GetClients(ctx context.Context, in *GetClientsRequest, opts ...grpc.CallOption) (*GetClientsResponse, error)
	// Count the number of topics
	CountTopics(ctx context.Context, in *CountTopicsRequest, opts ...grpc.CallOption) (*CountTopicsResponse, error)
	// Retrieve paginated topics
	GetTopics(ctx context.Context, in *GetTopicsRequest, opts ...grpc.CallOption) (*GetTopicsResponse, error)
	// Create a client-client link between on a target client
	LinkClient(ctx context.Context, in *LinkClientRequest, opts ...grpc.CallOption) (*LinkClientResponse, error)
	// Remove a client-client link on a target client
	UnlinkClient(ctx context.Context, in *UnlinkClientRequest, opts ...grpc.CallOption) (*UnlinkClientResponse, error)
	CountLinkedClients(ctx context.Context, in *CountLinkedClientsRequest, opts ...grpc.CallOption) (*CountLinkedClientsResponse, error)
	GetLinkedClients(ctx context.Context, in *GetLinkedClientsRequest, opts ...grpc.CallOption) (*GetLinkedClientsResponse, error)
	// Send a client pubkey to another client (pubkey mode only)
	SendClientPubKey(ctx context.Context, in *SendClientPubKeyRequest, opts ...grpc.CallOption) (*SendClientPubKeyResponse, error)
	// Remove a client pubkey from another client (pubkey mode only)
	RemoveClientPubKey(ctx context.Context, in *RemoveClientPubKeyRequest, opts ...grpc.CallOption) (*RemoveClientPubKeyResponse, error)
	ResetClientPubKeys(ctx context.Context, in *ResetClientPubKeysRequest, opts ...grpc.CallOption) (*ResetClientPubKeysResponse, error)
	NewC2Key(ctx context.Context, in *NewC2KeyRequest, opts ...grpc.CallOption) (*NewC2KeyResponse, error)
	ProtectMessage(ctx context.Context, in *ProtectMessageRequest, opts ...grpc.CallOption) (*ProtectMessageResponse, error)
	// Provide a stream on C2 system events, grpc only
	SubscribeToEventStream(ctx context.Context, in *SubscribeToEventStreamRequest, opts ...grpc.CallOption) (C2_SubscribeToEventStreamClient, error)
}

type c2Client struct {
	cc grpc.ClientConnInterface
}

func NewC2Client(cc grpc.ClientConnInterface) C2Client {
	return &c2Client{cc}
}

func (c *c2Client) NewClient(ctx context.Context, in *NewClientRequest, opts ...grpc.CallOption) (*NewClientResponse, error) {
	out := new(NewClientResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/NewClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) RemoveClient(ctx context.Context, in *RemoveClientRequest, opts ...grpc.CallOption) (*RemoveClientResponse, error) {
	out := new(RemoveClientResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/RemoveClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) ResetClient(ctx context.Context, in *ResetClientRequest, opts ...grpc.CallOption) (*ResetClientResponse, error) {
	out := new(ResetClientResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/ResetClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) NewClientKey(ctx context.Context, in *NewClientKeyRequest, opts ...grpc.CallOption) (*NewClientKeyResponse, error) {
	out := new(NewClientKeyResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/NewClientKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) NewTopic(ctx context.Context, in *NewTopicRequest, opts ...grpc.CallOption) (*NewTopicResponse, error) {
	out := new(NewTopicResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/NewTopic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) RemoveTopic(ctx context.Context, in *RemoveTopicRequest, opts ...grpc.CallOption) (*RemoveTopicResponse, error) {
	out := new(RemoveTopicResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/RemoveTopic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) NewTopicClient(ctx context.Context, in *NewTopicClientRequest, opts ...grpc.CallOption) (*NewTopicClientResponse, error) {
	out := new(NewTopicClientResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/NewTopicClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) RemoveTopicClient(ctx context.Context, in *RemoveTopicClientRequest, opts ...grpc.CallOption) (*RemoveTopicClientResponse, error) {
	out := new(RemoveTopicClientResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/RemoveTopicClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) CountTopicsForClient(ctx context.Context, in *CountTopicsForClientRequest, opts ...grpc.CallOption) (*CountTopicsForClientResponse, error) {
	out := new(CountTopicsForClientResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/CountTopicsForClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) GetTopicsForClient(ctx context.Context, in *GetTopicsForClientRequest, opts ...grpc.CallOption) (*GetTopicsForClientResponse, error) {
	out := new(GetTopicsForClientResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/GetTopicsForClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) CountClientsForTopic(ctx context.Context, in *CountClientsForTopicRequest, opts ...grpc.CallOption) (*CountClientsForTopicResponse, error) {
	out := new(CountClientsForTopicResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/CountClientsForTopic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) GetClientsForTopic(ctx context.Context, in *GetClientsForTopicRequest, opts ...grpc.CallOption) (*GetClientsForTopicResponse, error) {
	out := new(GetClientsForTopicResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/GetClientsForTopic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) CountClients(ctx context.Context, in *CountClientsRequest, opts ...grpc.CallOption) (*CountClientsResponse, error) {
	out := new(CountClientsResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/CountClients", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) GetClients(ctx context.Context, in *GetClientsRequest, opts ...grpc.CallOption) (*GetClientsResponse, error) {
	out := new(GetClientsResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/GetClients", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) CountTopics(ctx context.Context, in *CountTopicsRequest, opts ...grpc.CallOption) (*CountTopicsResponse, error) {
	out := new(CountTopicsResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/CountTopics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) GetTopics(ctx context.Context, in *GetTopicsRequest, opts ...grpc.CallOption) (*GetTopicsResponse, error) {
	out := new(GetTopicsResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/GetTopics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) LinkClient(ctx context.Context, in *LinkClientRequest, opts ...grpc.CallOption) (*LinkClientResponse, error) {
	out := new(LinkClientResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/LinkClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) UnlinkClient(ctx context.Context, in *UnlinkClientRequest, opts ...grpc.CallOption) (*UnlinkClientResponse, error) {
	out := new(UnlinkClientResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/UnlinkClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) CountLinkedClients(ctx context.Context, in *CountLinkedClientsRequest, opts ...grpc.CallOption) (*CountLinkedClientsResponse, error) {
	out := new(CountLinkedClientsResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/CountLinkedClients", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) GetLinkedClients(ctx context.Context, in *GetLinkedClientsRequest, opts ...grpc.CallOption) (*GetLinkedClientsResponse, error) {
	out := new(GetLinkedClientsResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/GetLinkedClients", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) SendClientPubKey(ctx context.Context, in *SendClientPubKeyRequest, opts ...grpc.CallOption) (*SendClientPubKeyResponse, error) {
	out := new(SendClientPubKeyResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/SendClientPubKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) RemoveClientPubKey(ctx context.Context, in *RemoveClientPubKeyRequest, opts ...grpc.CallOption) (*RemoveClientPubKeyResponse, error) {
	out := new(RemoveClientPubKeyResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/RemoveClientPubKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) ResetClientPubKeys(ctx context.Context, in *ResetClientPubKeysRequest, opts ...grpc.CallOption) (*ResetClientPubKeysResponse, error) {
	out := new(ResetClientPubKeysResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/ResetClientPubKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) NewC2Key(ctx context.Context, in *NewC2KeyRequest, opts ...grpc.CallOption) (*NewC2KeyResponse, error) {
	out := new(NewC2KeyResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/NewC2Key", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) ProtectMessage(ctx context.Context, in *ProtectMessageRequest, opts ...grpc.CallOption) (*ProtectMessageResponse, error) {
	out := new(ProtectMessageResponse)
	err := c.cc.Invoke(ctx, "/pb.C2/ProtectMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *c2Client) SubscribeToEventStream(ctx context.Context, in *SubscribeToEventStreamRequest, opts ...grpc.CallOption) (C2_SubscribeToEventStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_C2_serviceDesc.Streams[0], "/pb.C2/SubscribeToEventStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &c2SubscribeToEventStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type C2_SubscribeToEventStreamClient interface {
	Recv() (*Event, error)
	grpc.ClientStream
}

type c2SubscribeToEventStreamClient struct {
	grpc.ClientStream
}

func (x *c2SubscribeToEventStreamClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// C2Server is the server API for C2 service.
type C2Server interface {
	// Create a new client
	NewClient(context.Context, *NewClientRequest) (*NewClientResponse, error)
	// Remove a client
	RemoveClient(context.Context, *RemoveClientRequest) (*RemoveClientResponse, error)
	// Instruct the C2 server to send a reset command to the client
	ResetClient(context.Context, *ResetClientRequest) (*ResetClientResponse, error)
	// Generate a new key for the client
	NewClientKey(context.Context, *NewClientKeyRequest) (*NewClientKeyResponse, error)
	// Create a new topic
	NewTopic(context.Context, *NewTopicRequest) (*NewTopicResponse, error)
	// Remove a topic
	RemoveTopic(context.Context, *RemoveTopicRequest) (*RemoveTopicResponse, error)
	// Associate a topic with a client
	NewTopicClient(context.Context, *NewTopicClientRequest) (*NewTopicClientResponse, error)
	// Remove a topic / client association
	RemoveTopicClient(context.Context, *RemoveTopicClientRequest) (*RemoveTopicClientResponse, error)
	// Count the number of topics for a client
	CountTopicsForClient(context.Context, *CountTopicsForClientRequest) (*CountTopicsForClientResponse, error)
	// Retrieve paginated topics for a client
	GetTopicsForClient(context.Context, *GetTopicsForClientRequest) (*GetTopicsForClientResponse, error)
	// Count the number of clients for a topic
	CountClientsForTopic(context.Context, *CountClientsForTopicRequest) (*CountClientsForTopicResponse, error)
	// Retrieve paginated clients for a topic
	GetClientsForTopic(context.Context, *GetClientsForTopicRequest) (*GetClientsForTopicResponse, error)
	// Count the number of clients
	CountClients(context.Context, *CountClientsRequest) (*CountClientsResponse, error)
	// Retrieve paginated clients
	GetClients(context.Context, *GetClientsRequest) (*GetClientsResponse, error)
	// Count the number of topics
	CountTopics(context.Context, *CountTopicsRequest) (*CountTopicsResponse, error)
	// Retrieve paginated topics
	GetTopics(context.Context, *GetTopicsRequest) (*GetTopicsResponse, error)
	// Create a client-client link between on a target client
	LinkClient(context.Context, *LinkClientRequest) (*LinkClientResponse, error)
	// Remove a client-client link on a target client
	UnlinkClient(context.Context, *UnlinkClientRequest) (*UnlinkClientResponse, error)
	CountLinkedClients(context.Context, *CountLinkedClientsRequest) (*CountLinkedClientsResponse, error)
	GetLinkedClients(context.Context, *GetLinkedClientsRequest) (*GetLinkedClientsResponse, error)
	// Send a client pubkey to another client (pubkey mode only)
	SendClientPubKey(context.Context, *SendClientPubKeyRequest) (*SendClientPubKeyResponse, error)
	// Remove a client pubkey from another client (pubkey mode only)
	RemoveClientPubKey(context.Context, *RemoveClientPubKeyRequest) (*RemoveClientPubKeyResponse, error)
	ResetClientPubKeys(context.Context, *ResetClientPubKeysRequest) (*ResetClientPubKeysResponse, error)
	NewC2Key(context.Context, *NewC2KeyRequest) (*NewC2KeyResponse, error)
	ProtectMessage(context.Context, *ProtectMessageRequest) (*ProtectMessageResponse, error)
	// Provide a stream on C2 system events, grpc only
	SubscribeToEventStream(*SubscribeToEventStreamRequest, C2_SubscribeToEventStreamServer) error
}

// UnimplementedC2Server can be embedded to have forward compatible implementations.
type UnimplementedC2Server struct {
}

func (*UnimplementedC2Server) NewClient(ctx context.Context, req *NewClientRequest) (*NewClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewClient not implemented")
}
func (*UnimplementedC2Server) RemoveClient(ctx context.Context, req *RemoveClientRequest) (*RemoveClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveClient not implemented")
}
func (*UnimplementedC2Server) ResetClient(ctx context.Context, req *ResetClientRequest) (*ResetClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetClient not implemented")
}
func (*UnimplementedC2Server) NewClientKey(ctx context.Context, req *NewClientKeyRequest) (*NewClientKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewClientKey not implemented")
}
func (*UnimplementedC2Server) NewTopic(ctx context.Context, req *NewTopicRequest) (*NewTopicResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewTopic not implemented")
}
func (*UnimplementedC2Server) RemoveTopic(ctx context.Context, req *RemoveTopicRequest) (*RemoveTopicResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveTopic not implemented")
}
func (*UnimplementedC2Server) NewTopicClient(ctx context.Context, req *NewTopicClientRequest) (*NewTopicClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewTopicClient not implemented")
}
func (*UnimplementedC2Server) RemoveTopicClient(ctx context.Context, req *RemoveTopicClientRequest) (*RemoveTopicClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveTopicClient not implemented")
}
func (*UnimplementedC2Server) CountTopicsForClient(ctx context.Context, req *CountTopicsForClientRequest) (*CountTopicsForClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountTopicsForClient not implemented")
}
func (*UnimplementedC2Server) GetTopicsForClient(ctx context.Context, req *GetTopicsForClientRequest) (*GetTopicsForClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTopicsForClient not implemented")
}
func (*UnimplementedC2Server) CountClientsForTopic(ctx context.Context, req *CountClientsForTopicRequest) (*CountClientsForTopicResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountClientsForTopic not implemented")
}
func (*UnimplementedC2Server) GetClientsForTopic(ctx context.Context, req *GetClientsForTopicRequest) (*GetClientsForTopicResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetClientsForTopic not implemented")
}
func (*UnimplementedC2Server) CountClients(ctx context.Context, req *CountClientsRequest) (*CountClientsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountClients not implemented")
}
func (*UnimplementedC2Server) GetClients(ctx context.Context, req *GetClientsRequest) (*GetClientsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetClients not implemented")
}
func (*UnimplementedC2Server) CountTopics(ctx context.Context, req *CountTopicsRequest) (*CountTopicsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountTopics not implemented")
}
func (*UnimplementedC2Server) GetTopics(ctx context.Context, req *GetTopicsRequest) (*GetTopicsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTopics not implemented")
}
func (*UnimplementedC2Server) LinkClient(ctx context.Context, req *LinkClientRequest) (*LinkClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LinkClient not implemented")
}
func (*UnimplementedC2Server) UnlinkClient(ctx context.Context, req *UnlinkClientRequest) (*UnlinkClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnlinkClient not implemented")
}
func (*UnimplementedC2Server) CountLinkedClients(ctx context.Context, req *CountLinkedClientsRequest) (*CountLinkedClientsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountLinkedClients not implemented")
}
func (*UnimplementedC2Server) GetLinkedClients(ctx context.Context, req *GetLinkedClientsRequest) (*GetLinkedClientsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLinkedClients not implemented")
}
func (*UnimplementedC2Server) SendClientPubKey(ctx context.Context, req *SendClientPubKeyRequest) (*SendClientPubKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendClientPubKey not implemented")
}
func (*UnimplementedC2Server) RemoveClientPubKey(ctx context.Context, req *RemoveClientPubKeyRequest) (*RemoveClientPubKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveClientPubKey not implemented")
}
func (*UnimplementedC2Server) ResetClientPubKeys(ctx context.Context, req *ResetClientPubKeysRequest) (*ResetClientPubKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetClientPubKeys not implemented")
}
func (*UnimplementedC2Server) NewC2Key(ctx context.Context, req *NewC2KeyRequest) (*NewC2KeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewC2Key not implemented")
}
func (*UnimplementedC2Server) ProtectMessage(ctx context.Context, req *ProtectMessageRequest) (*ProtectMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProtectMessage not implemented")
}
func (*UnimplementedC2Server) SubscribeToEventStream(req *SubscribeToEventStreamRequest, srv C2_SubscribeToEventStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeToEventStream not implemented")
}

func RegisterC2Server(s *grpc.Server, srv C2Server) {
	s.RegisterService(&_C2_serviceDesc, srv)
}

func _C2_NewClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).NewClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/NewClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).NewClient(ctx, req.(*NewClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_RemoveClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).RemoveClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/RemoveClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).RemoveClient(ctx, req.(*RemoveClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_ResetClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).ResetClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/ResetClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).ResetClient(ctx, req.(*ResetClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_NewClientKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewClientKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).NewClientKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/NewClientKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).NewClientKey(ctx, req.(*NewClientKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_NewTopic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewTopicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).NewTopic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/NewTopic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).NewTopic(ctx, req.(*NewTopicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_RemoveTopic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveTopicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).RemoveTopic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/RemoveTopic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).RemoveTopic(ctx, req.(*RemoveTopicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_NewTopicClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewTopicClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).NewTopicClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/NewTopicClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).NewTopicClient(ctx, req.(*NewTopicClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_RemoveTopicClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveTopicClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).RemoveTopicClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/RemoveTopicClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).RemoveTopicClient(ctx, req.(*RemoveTopicClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_CountTopicsForClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountTopicsForClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).CountTopicsForClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/CountTopicsForClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).CountTopicsForClient(ctx, req.(*CountTopicsForClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_GetTopicsForClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTopicsForClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).GetTopicsForClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/GetTopicsForClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).GetTopicsForClient(ctx, req.(*GetTopicsForClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_CountClientsForTopic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountClientsForTopicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).CountClientsForTopic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/CountClientsForTopic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).CountClientsForTopic(ctx, req.(*CountClientsForTopicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_GetClientsForTopic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClientsForTopicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).GetClientsForTopic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/GetClientsForTopic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).GetClientsForTopic(ctx, req.(*GetClientsForTopicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_CountClients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountClientsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).CountClients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/CountClients",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).CountClients(ctx, req.(*CountClientsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_GetClients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClientsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).GetClients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/GetClients",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).GetClients(ctx, req.(*GetClientsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_CountTopics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountTopicsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).CountTopics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/CountTopics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).CountTopics(ctx, req.(*CountTopicsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_GetTopics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTopicsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).GetTopics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/GetTopics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).GetTopics(ctx, req.(*GetTopicsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_LinkClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LinkClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).LinkClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/LinkClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).LinkClient(ctx, req.(*LinkClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_UnlinkClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnlinkClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).UnlinkClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/UnlinkClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).UnlinkClient(ctx, req.(*UnlinkClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_CountLinkedClients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountLinkedClientsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).CountLinkedClients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/CountLinkedClients",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).CountLinkedClients(ctx, req.(*CountLinkedClientsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_GetLinkedClients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLinkedClientsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).GetLinkedClients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/GetLinkedClients",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).GetLinkedClients(ctx, req.(*GetLinkedClientsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_SendClientPubKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendClientPubKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).SendClientPubKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/SendClientPubKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).SendClientPubKey(ctx, req.(*SendClientPubKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_RemoveClientPubKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveClientPubKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).RemoveClientPubKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/RemoveClientPubKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).RemoveClientPubKey(ctx, req.(*RemoveClientPubKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_ResetClientPubKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetClientPubKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).ResetClientPubKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/ResetClientPubKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).ResetClientPubKeys(ctx, req.(*ResetClientPubKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_NewC2Key_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewC2KeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).NewC2Key(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/NewC2Key",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).NewC2Key(ctx, req.(*NewC2KeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_ProtectMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProtectMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).ProtectMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.C2/ProtectMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).ProtectMessage(ctx, req.(*ProtectMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _C2_SubscribeToEventStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeToEventStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(C2Server).SubscribeToEventStream(m, &c2SubscribeToEventStreamServer{stream})
}

type C2_SubscribeToEventStreamServer interface {
	Send(*Event) error
	grpc.ServerStream
}

type c2SubscribeToEventStreamServer struct {
	grpc.ServerStream
}

func (x *c2SubscribeToEventStreamServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

var _C2_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.C2",
	HandlerType: (*C2Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewClient",
			Handler:    _C2_NewClient_Handler,
		},
		{
			MethodName: "RemoveClient",
			Handler:    _C2_RemoveClient_Handler,
		},
		{
			MethodName: "ResetClient",
			Handler:    _C2_ResetClient_Handler,
		},
		{
			MethodName: "NewClientKey",
			Handler:    _C2_NewClientKey_Handler,
		},
		{
			MethodName: "NewTopic",
			Handler:    _C2_NewTopic_Handler,
		},
		{
			MethodName: "RemoveTopic",
			Handler:    _C2_RemoveTopic_Handler,
		},
		{
			MethodName: "NewTopicClient",
			Handler:    _C2_NewTopicClient_Handler,
		},
		{
			MethodName: "RemoveTopicClient",
			Handler:    _C2_RemoveTopicClient_Handler,
		},
		{
			MethodName: "CountTopicsForClient",
			Handler:    _C2_CountTopicsForClient_Handler,
		},
		{
			MethodName: "GetTopicsForClient",
			Handler:    _C2_GetTopicsForClient_Handler,
		},
		{
			MethodName: "CountClientsForTopic",
			Handler:    _C2_CountClientsForTopic_Handler,
		},
		{
			MethodName: "GetClientsForTopic",
			Handler:    _C2_GetClientsForTopic_Handler,
		},
		{
			MethodName: "CountClients",
			Handler:    _C2_CountClients_Handler,
		},
		{
			MethodName: "GetClients",
			Handler:    _C2_GetClients_Handler,
		},
		{
			MethodName: "CountTopics",
			Handler:    _C2_CountTopics_Handler,
		},
		{
			MethodName: "GetTopics",
			Handler:    _C2_GetTopics_Handler,
		},
		{
			MethodName: "LinkClient",
			Handler:    _C2_LinkClient_Handler,
		},
		{
			MethodName: "UnlinkClient",
			Handler:    _C2_UnlinkClient_Handler,
		},
		{
			MethodName: "CountLinkedClients",
			Handler:    _C2_CountLinkedClients_Handler,
		},
		{
			MethodName: "GetLinkedClients",
			Handler:    _C2_GetLinkedClients_Handler,
		},
		{
			MethodName: "SendClientPubKey",
			Handler:    _C2_SendClientPubKey_Handler,
		},
		{
			MethodName: "RemoveClientPubKey",
			Handler:    _C2_RemoveClientPubKey_Handler,
		},
		{
			MethodName: "ResetClientPubKeys",
			Handler:    _C2_ResetClientPubKeys_Handler,
		},
		{
			MethodName: "NewC2Key",
			Handler:    _C2_NewC2Key_Handler,
		},
		{
			MethodName: "ProtectMessage",
			Handler:    _C2_ProtectMessage_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeToEventStream",
			Handler:       _C2_SubscribeToEventStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}
